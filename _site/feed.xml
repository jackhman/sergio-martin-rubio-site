<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-01-05T19:12:39+00:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Sergio Martin Rubio</title><subtitle>Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live.</subtitle><author><name>Sergio Martin Rubio</name><email>me@sergiomartinrubio.com</email></author><entry><title type="html">Get Started With Mockito</title><link href="http://localhost:4000/articles/get-started-with-mockito" rel="alternate" type="text/html" title="Get Started With Mockito" /><published>2019-12-16T00:00:00+00:00</published><updated>2019-12-16T00:00:00+00:00</updated><id>http://localhost:4000/articles/get-started-with-mockito</id><content type="html" xml:base="http://localhost:4000/articles/get-started-with-mockito">&lt;div class=&quot;list-group my-3&quot;&gt;

  
    &lt;a class=&quot;list-group-item list-group-item-action active disabled text-white&quot;&gt;Table of Contents&lt;/a&gt;
  

  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#what-is-a-mock&quot;&gt;
What is a mock?&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#mockito-setup&quot;&gt;
Mockito Setup&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#create-a-mock&quot;&gt;
Create a Mock&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#stub-methods&quot;&gt;
Stub Methods&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#void-methods&quot;&gt;
Void Methods&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#argument-matchers&quot;&gt;
Argument Matchers&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#verify-behaviour&quot;&gt;
Verify Behaviour&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#using-spies&quot;&gt;
Using Spies&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#dependency-injection&quot;&gt;
Dependency Injection&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#reset-mocks&quot;&gt;
Reset Mocks&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#capture-arguments&quot;&gt;
Capture Arguments&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#behavior-driven-development&quot;&gt;
Behavior Driven Development&lt;/a&gt;
    
  

&lt;/div&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://site.mockito.org&quot;&gt;Mockito&lt;/a&gt; is a popular mocking framework for &lt;strong&gt;Java&lt;/strong&gt; applications. This framework helps you to test classes in isolation and avoids creating collaborators in your unit tests. This is a very common requirement in web applications that use the MVC pattern. For instance, you might want to test a service layer that uses an utility class to check the payment method and then will call an API to process the payment. In this situation you have to instanciate or inject the utility class and the API client, and the second one will require to start a mock server. As you can see this looks like an integration test instead of a simple unit test.&lt;/p&gt;

&lt;h2 id=&quot;what-is-a-mock&quot;&gt;What is a mock?&lt;/h2&gt;

&lt;p&gt;A &lt;strong&gt;mock&lt;/strong&gt; is a proxy to the original object, so if a method of a proxy object is called, then the proxy object will decide what to do. When you do something like &lt;code class=&quot;highlighter-rouge&quot;&gt;Mockito.mock(Foo.class)&lt;/code&gt; you are simply creating a proxy object of the &lt;em&gt;Foo&lt;/em&gt; class.&lt;/p&gt;

&lt;p&gt;Mockito uses &lt;a href=&quot;https://github.com/cglib/cglib&quot;&gt;CGLIB&lt;/a&gt; which is based on &lt;a href=&quot;https://asm.ow2.io&quot;&gt;ASM&lt;/a&gt;. &lt;strong&gt;CGLIB&lt;/strong&gt; generates proxy classes by extending the original class, and all the overriden methods will call &lt;a href=&quot;http://cglib.sourceforge.net/apidocs/net/sf/cglib/proxy/MethodInterceptor.html#intercept%28java.lang.Object,%20java.lang.reflect.Method,%20java.lang.Object[],%20net.sf.cglib.proxy.MethodProxy%29&quot;&gt;MethodInterceptor.intercept()&lt;/a&gt; if the proxy callback is not null, otherwise the super method (original method) will be called. This brings limitations:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Final classes cannot be mocked.&lt;/li&gt;
  &lt;li&gt;Final, private or static methods cannot be intercepted.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;To create proxy classes of final classes you need to perform bytecode transformations. e.g. remove the &lt;code class=&quot;highlighter-rouge&quot;&gt;final&lt;/code&gt; modifier.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;AMS&lt;/strong&gt; is a framework to manipulate Java bytecode.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;mockito-setup&quot;&gt;Mockito Setup&lt;/h2&gt;

&lt;p&gt;You can start using mockito by adding the following Maven dependency:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.mockito&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;mockito-core&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.28.2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you use Gradle:&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;repositories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jcenter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testCompile&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;org.mockito:mockito-core:2.+&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Mockito is also included in &lt;code class=&quot;highlighter-rouge&quot;&gt;spring-boot-starter-test&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;create-a-mock&quot;&gt;Create a Mock&lt;/h2&gt;

&lt;p&gt;You can use an static method or an annotation to create a mock.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;FooRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Mockito&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Mock&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FooRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@Mock&lt;/code&gt; annotation requires either &lt;code class=&quot;highlighter-rouge&quot;&gt;MockitoAnnotations.initMocks(testClass)&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;@ExtendWith(MockitoExtension.class)&lt;/code&gt;. In JUnit 4 is &lt;code class=&quot;highlighter-rouge&quot;&gt;@RunWith(MockitoJUnitRunner.class)&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Mock&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FooRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@InjectMocks&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FooServiceImpl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fooService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@BeforeEach&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MockitoAnnotations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;initMocks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@ExtendWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MockitoExtension&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FooServiceTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Mock&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FooRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@InjectMocks&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FooServiceImpl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fooService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;stub-methods&quot;&gt;Stub Methods&lt;/h2&gt;

&lt;p&gt;Any mocking framework allows you to return the desired value when a particular method is called, and with &lt;strong&gt;Mockito&lt;/strong&gt; this can be achieved with &lt;code class=&quot;highlighter-rouge&quot;&gt;Mockito.when()&lt;/code&gt; in conbination with &lt;code class=&quot;highlighter-rouge&quot;&gt;thenReturn()&lt;/code&gt;. This is what we call a stub.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getFooMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thenReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;How does is work?&lt;/strong&gt; A proxy is dinamically defined, so when the static method &lt;code class=&quot;highlighter-rouge&quot;&gt;Mockito.when()&lt;/code&gt; is called, the method passed is stored. Then, when &lt;code class=&quot;highlighter-rouge&quot;&gt;thenReturn()&lt;/code&gt; is called, the value is also stored to the saved method. Finally, if the same proxy method with the same parametes is called again it will return the stored value this time.&lt;/p&gt;

&lt;p&gt;You can also stub the same method multiple times:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thenReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thenThrow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayIndexOutOfBoundsException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Mockito also has other static methods that can be combined with &lt;code class=&quot;highlighter-rouge&quot;&gt;when()&lt;/code&gt; method, like the one used in the previous example &lt;code class=&quot;highlighter-rouge&quot;&gt;.thenThrow()&lt;/code&gt;.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Method&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;thenReturn(T value)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns given value&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;thenThrow(Throwable throwableType)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Throws given exception&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;thenAnswer(Answer&amp;lt;?&amp;gt; answer)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;It’s use to return custom answers&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;then(Answer&amp;lt;?&amp;gt; answer)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Alias of &lt;code class=&quot;highlighter-rouge&quot;&gt;thenAnswer()&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;thenCallRealMethod()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The original method is called. It’s a partcial mock.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;thenCallRealMethod()&lt;/code&gt; cannot be used with mocked interfaces or abstract classes. No data from the original class is initialized.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can also stub multiple calls to the same method as follows:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getNumberMultipleTimesTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// GIVEN&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;anyInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thenReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// WHEN&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fooService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fooService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thirdNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fooService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// THEN&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secondNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thirdNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;void-methods&quot;&gt;Void Methods&lt;/h3&gt;

&lt;p&gt;For void methods you can use:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;doReturn(Object)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;In case you cannnot use &lt;code class=&quot;highlighter-rouge&quot;&gt;when()&lt;/code&gt;. e.g. spy objects&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;doThrow(Throwable)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Used when the void method will throw an exception&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;doAnswer(Answer)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Stubs a void method with a generic answer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;doNothing()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;By default void methods do nothing but it can be uselful when stubbing consecutive calls&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;doCallRealMethod()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;When you want to call the real implementation of a method&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;argument-matchers&quot;&gt;Argument Matchers&lt;/h2&gt;

&lt;p&gt;Mockito argument matchers give you more flexibility when writing stubs. A long list of matchers is provided:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;any()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Matches anything, including nulls and varargs.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;any(Class&amp;lt;T&amp;gt; type)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Matches any object of given type, excluding nulls.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;any&amp;lt;Type&amp;gt;()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Any of the given “Type”. e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;anyInt()&lt;/code&gt;.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;argThat(ArgumentMatcher&amp;lt;T&amp;gt; matcher)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;For custom argument matchers.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;contains(String substring)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Contains substring.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;startsWith(String prefix)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;String argument that starts with the given prefix.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;endsWith(String suffix)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Ends with given suffix.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;eq(T value)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;T&lt;/code&gt; argument that is equal to the given value.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;isA(Class&amp;lt;T&amp;gt; type)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Object argument that implements the given class.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;isNotNull()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Not null argument.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;isNull()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Null argument.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;matches(Pattern pattern)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;For regular expressions.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;mark class=&quot;px-2&quot;&gt;If you use an argument matcher in a method call, the rest of the arguments have to be argument matchers.&lt;/mark&gt;&lt;/p&gt;

&lt;h2 id=&quot;verify-behaviour&quot;&gt;Verify Behaviour&lt;/h2&gt;

&lt;p&gt;Mockito does not automatically verify all stubbed calls because the tested code should focus on values returned by stubbed methods. However, sometimes you might want to verify if a particular mock  was called. You can use Mockito &lt;code class=&quot;highlighter-rouge&quot;&gt;verify(mock).&amp;lt;method&amp;gt;&lt;/code&gt; to check if a particular method was called.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;verify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By default &lt;code class=&quot;highlighter-rouge&quot;&gt;verify(mock)&lt;/code&gt; checks if a given method was called once. But this can be customized by using verification modifiers.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;times(int)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The method is called the n times&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;never()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The method from the mock is never called&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;verifyNoInteractions(mock)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Verifies no interaction with any method of the given mock&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;verifyNoMoreInteractions(mock)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Checks if the given mock has any unverified interaction&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;atLeastOnce()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The method called at least once&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;atLeast(int)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The method called at least n times&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;atMost(int)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The method called at motst n times&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;only()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Checks if the given method was the only called&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The following example verifies if the method &lt;code class=&quot;highlighter-rouge&quot;&gt;getNumber&lt;/code&gt; with any integer was called three times.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;verify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;times&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;anyInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In this example &lt;code class=&quot;highlighter-rouge&quot;&gt;verify()&lt;/code&gt; checks if the method &lt;code class=&quot;highlighter-rouge&quot;&gt;getNumber&lt;/code&gt; was called once and no more interactions with the object &lt;code class=&quot;highlighter-rouge&quot;&gt;fooRepository&lt;/code&gt; were performed.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;verify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;anyInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;verifyNoMoreInteractions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;verify-order&quot;&gt;Verify Order&lt;/h3&gt;

&lt;p&gt;Sometimes you may want to verify the order in which a mock is called.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getNumberVerifyInOrderTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// GIVEN&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;anyInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thenReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// WHEN&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fooService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fooService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fooService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// THEN&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;InOrder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inOrder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inOrder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;inOrder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;verify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;inOrder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;verify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;inOrder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;verify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can create an &lt;code class=&quot;highlighter-rouge&quot;&gt;InOrder&lt;/code&gt; instance and pass the mocks you want to verify in order.&lt;/p&gt;

&lt;h2 id=&quot;using-spies&quot;&gt;Using Spies&lt;/h2&gt;

&lt;p&gt;Spies are partial mocks. This means that when you use a spy then the real methods are called unless a method was stubbed. Spies are created with the annotation &lt;code class=&quot;highlighter-rouge&quot;&gt;@Spy&lt;/code&gt; or by creating an instance of the class you want to spy and passing the instance to &lt;code class=&quot;highlighter-rouge&quot;&gt;Mockito.spy()&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Spy&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FooRepositoryImpl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;saveAndGetFirstNumberWithSpyTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;doReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;anyInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// throws IndexOutOfBoundsException because the real method is first called&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//        when(spy.getNumber(0)).thenReturn(4);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fooService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;saveAndGetFirstNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;verify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;saveNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the previous example &lt;code class=&quot;highlighter-rouge&quot;&gt;getNumber()&lt;/code&gt; method is stubbed, so when &lt;code class=&quot;highlighter-rouge&quot;&gt;saveAndGetFirstNumber()&lt;/code&gt; is invoked  &lt;code class=&quot;highlighter-rouge&quot;&gt;getNumber()&lt;/code&gt; will return the value given in the stub and will call the real &lt;code class=&quot;highlighter-rouge&quot;&gt;saveNumber()&lt;/code&gt; method with the value &lt;code class=&quot;highlighter-rouge&quot;&gt;3&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sometimes it’s impossible or impractical to use &lt;code class=&quot;highlighter-rouge&quot;&gt;when(Object)&lt;/code&gt; for stubbing spies because the real method will be called first and might throw an exeption. to prevents unnecessary calls to a real method during stubbing use &lt;code class=&quot;highlighter-rouge&quot;&gt;will&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;given&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;do&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;when&lt;/code&gt;. e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;doReturn(4).when(spy).getNumber(anyInt());&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;dependency-injection&quot;&gt;Dependency Injection&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@InjectMocks&lt;/code&gt; is used in combination with &lt;code class=&quot;highlighter-rouge&quot;&gt;@Mock&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;@Spy&lt;/code&gt; to inject mocks or spy fields into the object under test automatically.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Mock&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// @Spy is also possible&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FooRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@InjectMocks&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FooServiceImpl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fooService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;reset-mocks&quot;&gt;Reset Mocks&lt;/h2&gt;

&lt;p&gt;In some cases it is required to reset a mock, for instance, you might want to use a container-injected mock like the ones from &lt;a href=&quot;http://sergiomartinrubio.com/articles/spring-bean-lifecycle-fundamentals&quot;&gt;Spring Framework&lt;/a&gt; to forget any interactions and stubbing of a particular mock.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getNumbersWithResetTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thenReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fooService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;reset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emptyNumbers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fooService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emptyNumbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;The use of reset is usually a code smell and it means you are testing too much in the same test method. Try to keep tests small and focused on a single behaviour.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;capture-arguments&quot;&gt;Capture Arguments&lt;/h2&gt;

&lt;p&gt;You can assert arguments after verification with captors. This is an alternative to argument matchers during stubbing, and in a similar way, it allows you to check if a mock was actually called with a particular value.&lt;/p&gt;

&lt;p&gt;To use a captor you can simply declare an &lt;code class=&quot;highlighter-rouge&quot;&gt;ArgumentCaptor&lt;/code&gt; with the class that you want to capture, and when you call &lt;code class=&quot;highlighter-rouge&quot;&gt;verify()&lt;/code&gt; you will pass the argument captor object so you can write some assertions later.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;verifyWithCaptor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fooService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;saveAndGetFirstNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;ArgumentCaptor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argument&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArgumentCaptor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;verify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;saveNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;capture&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;behavior-driven-development&quot;&gt;Behavior Driven Development&lt;/h2&gt;

&lt;p&gt;A test should be split into three blocks, each with a specified responsibility.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;GIVEN&lt;/strong&gt;: Mock initialization, configuration and stubs.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;WHEN&lt;/strong&gt;: Call to the &lt;em&gt;SUT&lt;/em&gt; (System Under Test) which can a method call.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;THEN&lt;/strong&gt;: Assertions and verifications.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mockito provides &lt;code class=&quot;highlighter-rouge&quot;&gt;given()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;willReturn()&lt;/code&gt;, which are aliases for &lt;code class=&quot;highlighter-rouge&quot;&gt;when()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;thenReturn()&lt;/code&gt; while stubbing, so tests perfectly fits with the Behavior Driven Development semantic. Similarly, &lt;code class=&quot;highlighter-rouge&quot;&gt;verify()&lt;/code&gt; can also be replaced with &lt;code class=&quot;highlighter-rouge&quot;&gt;then()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;should()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;e.g.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getStringTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// GIVEN&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;given&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getFooMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;willReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// WHEN&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fooService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// THEN&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;should&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getFooMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;GIVEN, WHEN and THEN comments make intentions of unit tests clearer. You might also consider a proper name for your tests e.g.  &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;testName&amp;gt;Given&amp;lt;configuration&amp;gt;When&amp;lt;somthingHappens&amp;gt;Then&amp;lt;expectations&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p class=&quot;text-center&quot;&gt;
&lt;a class=&quot;m-1 btn btn-outline-primary btn-2 &quot; href=&quot;https://github.com/smartinrub/spring-boot-mockito.git&quot;&gt;
  Examples
&lt;/a&gt;
&lt;/p&gt;</content><author><name>Sergio Martin Rubio</name><email>me@sergiomartinrubio.com</email></author><category term="Testing" /><category term="Java" /><category term="Mockito" /><summary type="html"></summary></entry><entry><title type="html">Get Started With Java Servlets</title><link href="http://localhost:4000/articles/get-started-with-java-servlets" rel="alternate" type="text/html" title="Get Started With Java Servlets" /><published>2019-11-11T00:00:00+00:00</published><updated>2019-11-11T00:00:00+00:00</updated><id>http://localhost:4000/articles/get-started-with-java-servlets</id><content type="html" xml:base="http://localhost:4000/articles/get-started-with-java-servlets">&lt;div class=&quot;list-group my-3&quot;&gt;

  
    &lt;a class=&quot;list-group-item list-group-item-action active disabled text-white&quot;&gt;Table of Contents&lt;/a&gt;
  

  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#what-is-a-servlet&quot;&gt;What Is a Servlet?&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#how-a-client-request-is-processed-by-the-web-server&quot;&gt;
How a Client Request is processed by the Web Server&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#servlet-lifecycle&quot;&gt;
Servlet Lifecycle&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#servlet-component&quot;&gt;
Servlet Component&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#filters&quot;&gt;
Filters&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#event-listeners&quot;&gt;
Event Listeners&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#exception-handling&quot;&gt;
Exception Handling&lt;/a&gt;
    
  

&lt;/div&gt;

&lt;h2 id=&quot;what-is-a-servlet&quot;&gt;What Is a Servlet?&lt;/h2&gt;

&lt;p&gt;A &lt;strong&gt;Java Servlet&lt;/strong&gt; is simply a class that extends from one of the classes in &lt;code class=&quot;highlighter-rouge&quot;&gt;javax.servlet.http&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;javax.servlet&lt;/code&gt; packages and is used in applications to handle network communication like &lt;em&gt;HTTP request-response&lt;/em&gt; model.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;Container&lt;/strong&gt; is an interface between a component (Servlet, data persistance…) and the low-level functionalities that supports the component. Web containers receive network requests and redirect those requests to a servlet object by mapping the URL path contained in the request to the servlet. A URL path contains the context root and, optionally, a URL pattern:&lt;/p&gt;

&lt;p&gt;http://host:port/context-root[/url-pattern]&lt;/p&gt;

&lt;p&gt;Servlet containers handle many tedious tasks like opening sockets; tranformations to convert HTTP into Java API calls; or provide a set of interfaces to write your own servlet implementation.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: Servlets and JSPs require Servlet Containers liket Apache &lt;a href=&quot;http://tomcat.apache.org/&quot;&gt;Tomcat&lt;/a&gt;, &lt;a href=&quot;https://wildfly.org/&quot;&gt;WildFly&lt;/a&gt;, etc..&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;how-a-client-request-is-processed-by-the-web-server&quot;&gt;How a Client Request is processed by the Web Server&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;The web server receives the HTTP request.&lt;/li&gt;
  &lt;li&gt;The request is forwarded to the &lt;em&gt;Servlet Container&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;The Servlet Container creates two objects the &lt;code class=&quot;highlighter-rouge&quot;&gt;HttpServletRequest&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;HttpServletResponse&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;The container creates a thread for the request, passes the request and reponse objects as arguments and delegates the request to a particular Servlet chosen between the Servlets it contains.&lt;/li&gt;
  &lt;li&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;service()&lt;/code&gt; method is executed and evaluates which Servlet method will be called (&lt;code class=&quot;highlighter-rouge&quot;&gt;doGet()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;doPost()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;doPut()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;doDelete()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;doHead()&lt;/code&gt;, …) based on the request sent by the client (&lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;PUT&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;DELETE&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD&lt;/code&gt;, …).&lt;/li&gt;
  &lt;li&gt;The Servlet handles the client request and generates content to be returned to the client.&lt;/li&gt;
  &lt;li&gt;The container sends the Servlet response to the client.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: &lt;code class=&quot;highlighter-rouge&quot;&gt;ServletRequest&lt;/code&gt; contains parameters such as name, values, attributes, and an input stream.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;figure w-100&quot;&gt;
  &lt;img src=&quot;https://lh3.googleusercontent.com/Ig7kjtbUiYNt86tx49lpvMsZY-Cc-4teAFboao1-szXV450v4J11BEfUFX1qhAnlM5g7t2gp3flPbitnaSqHv285gttOEPkNFCZf8IIk6gkpatXSba3XtbkfnNnmUlRn96SsuGVr9g=w2400&quot; class=&quot;figure-img img-fluid rounded&quot; alt=&quot;Web Server and Servlet Container&quot; /&gt;
  
    &lt;figcaption class=&quot;figure-caption text-center&quot;&gt;Web Server and Servlet Container&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;h2 id=&quot;servlet-lifecycle&quot;&gt;Servlet Lifecycle&lt;/h2&gt;

&lt;p&gt;The servlet container is responsible for controlling the Servlet lifecycle. What happen when a request comes in?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;If an instance of the Servlet does not exist, the web container:
    &lt;ul&gt;
      &lt;li&gt;Loads the servlet class.&lt;/li&gt;
      &lt;li&gt;Creates an instance of the class.&lt;/li&gt;
      &lt;li&gt;Calls &lt;code class=&quot;highlighter-rouge&quot;&gt;init()&lt;/code&gt; method to initialize the servlet.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;If an instance already exists the container calls the &lt;code class=&quot;highlighter-rouge&quot;&gt;service()&lt;/code&gt; and passes the request and response objects.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Servlets stay in memory waiting for other requests, and will not be unloaded unless the servlet container sees a shortage of memory. Before the servlet is ready to be garbage collected the &lt;code class=&quot;highlighter-rouge&quot;&gt;destroy()&lt;/code&gt; method is called. This will  happen when all servlet methods are completed or after a server-specific grace period.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: when &lt;code class=&quot;highlighter-rouge&quot;&gt;destroy()&lt;/code&gt; method is called you release resources created by the &lt;code class=&quot;highlighter-rouge&quot;&gt;init()&lt;/code&gt; method like database connections.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;servlet-component&quot;&gt;Servlet Component&lt;/h2&gt;

&lt;p&gt;Use the &lt;code class=&quot;highlighter-rouge&quot;&gt;@WebServlet(name = &quot;ConvertServlet&quot;)&lt;/code&gt; annotation or the deployment descriptor &lt;code class=&quot;highlighter-rouge&quot;&gt;web.xml&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;ConvertServlet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-class&amp;gt;&lt;/span&gt;com.sergiomartinrubio.javaservletfilters.servlet.IpAddressConverterServlet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-class&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Both the annotated servlet or the XML servlet declarion must specify at least one URL pattern. In case of annation use the &lt;code class=&quot;highlighter-rouge&quot;&gt;urlPatterns&lt;/code&gt; attribute when other attributes are also used. For XML declaration:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-mapping&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;ConvertServlet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;url-pattern&amp;gt;&lt;/span&gt;/convert&lt;span class=&quot;nt&quot;&gt;&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-mapping&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@WebServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlPatterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/convert&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ConvertServlet&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IpAddressConverterServlet&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpServlet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;c1&quot;&gt;// servlet methods (doGet(), doPost(), doPut())&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: Annotations require &lt;em&gt;Servlet API 3.0&lt;/em&gt; or higher and &lt;em&gt;tomcat7&lt;/em&gt; or any later version of &lt;em&gt;Tomcat&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;mark class=&quot;px-2&quot;&gt;From now on most of the servlet definitions will be shown with annotations.&lt;/mark&gt;&lt;/p&gt;

&lt;p&gt;The servlet initialization process can be customize if you override the &lt;code class=&quot;highlighter-rouge&quot;&gt;init()&lt;/code&gt; method of the &lt;code class=&quot;highlighter-rouge&quot;&gt;Servlet&lt;/code&gt; interface, or if you use the &lt;code class=&quot;highlighter-rouge&quot;&gt;initParams&lt;/code&gt; anotation attribute in combination with &lt;code class=&quot;highlighter-rouge&quot;&gt;@WebInitParam&lt;/code&gt; annotation.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@WebServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlPatterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/convert&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ConvertServlet&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initParams&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;@WebInitParam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;param2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;@WebInitParam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;param2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;goodbye&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Initializatio paramters are used to provide data that a Servlet needs. The values can be retrieve with the  &lt;code class=&quot;highlighter-rouge&quot;&gt;getInitParameter()&lt;/code&gt; method.&lt;/p&gt;

&lt;h3 id=&quot;servlet-request&quot;&gt;Servlet Request&lt;/h3&gt;

&lt;p&gt;Clients send data to the Servlet in the &lt;code class=&quot;highlighter-rouge&quot;&gt;HttpServletRequest&lt;/code&gt;, which contains the request URL, HTTP headers, query string, and so on. Query strings contain a set of parameters and values, that can be retrieved by using the &lt;code class=&quot;highlighter-rouge&quot;&gt;getParameter()&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;e.g.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myParameter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myParameter&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;servlet-response&quot;&gt;Servlet Response&lt;/h3&gt;

&lt;p&gt;Servlets return responses to clients in the &lt;code class=&quot;highlighter-rouge&quot;&gt;HttpServletResponse&lt;/code&gt;. To send character data, use the &lt;code class=&quot;highlighter-rouge&quot;&gt;PrintWriter&lt;/code&gt; returned by the response’s &lt;code class=&quot;highlighter-rouge&quot;&gt;getWriter()&lt;/code&gt; method. You can also send binary data with the &lt;code class=&quot;highlighter-rouge&quot;&gt;ServletOutputStream&lt;/code&gt; returned by &lt;code class=&quot;highlighter-rouge&quot;&gt;getOutputStream()&lt;/code&gt; method. Additionally, the response object allows you to set things like content type, status codes, cookies.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpServletResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SC_OK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setContentType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;application/json&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{\&quot;value\&quot;:\&quot;Hello World}\&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;filters&quot;&gt;Filters&lt;/h2&gt;

&lt;p&gt;A &lt;strong&gt;filter&lt;/strong&gt; is used to transform headers or content of a request or reponse. Filters are attatched to web components, but they should be independent from web resources, so they can reused with multiple web components.&lt;/p&gt;

&lt;p&gt;Common use cases:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Retrieve request and add some business logic around it.&lt;/li&gt;
  &lt;li&gt;Block the request or reponse. e.g. check for authentication tokens in the headers.&lt;/li&gt;
  &lt;li&gt;Modify request headers and data. e.g. set new attributes.&lt;/li&gt;
  &lt;li&gt;Modify response headers and data. e.g. add tracing id.&lt;/li&gt;
  &lt;li&gt;Interact with external resources.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Use the &lt;code class=&quot;highlighter-rouge&quot;&gt;@WebFilter&lt;/code&gt; annotation with at least one URL pattern to define a filter in a web application. Classes annotated with the &lt;code class=&quot;highlighter-rouge&quot;&gt;@WebFilter&lt;/code&gt; annotation must implement the &lt;code class=&quot;highlighter-rouge&quot;&gt;javax.servlet.Filter&lt;/code&gt; interface.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@WebFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlPatterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/convert&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FormatFilter&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;c1&quot;&gt;// filter methods (doFilter(), init(), destroy())&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;doFilter()&lt;/code&gt; is the main method in a &lt;code class=&quot;highlighter-rouge&quot;&gt;Filter&lt;/code&gt; and is used to access and/or modify the request and reponse headers, invoke the next filter in the filter chain. If the current filter is the last filter in the chain that ends with the target web component or static resource. However, the filter can block the request and handle the reponse. In addition to doFilter, you must implement the init and destroy methods.&lt;/p&gt;

&lt;p&gt;Filters can modify, add or remove data in the request and reponse by calling methods like &lt;code class=&quot;highlighter-rouge&quot;&gt;setAttribute()&lt;/code&gt;. You can also  override HTTP request methods by wrapping the request in an object that extends either &lt;code class=&quot;highlighter-rouge&quot;&gt;HttpServletRequestWrapper&lt;/code&gt;. To override HTTP response methods, you wrap the response in an object that extends either &lt;code class=&quot;highlighter-rouge&quot;&gt;HttpServletResponseWrapper&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@WebFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlPatterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/convert&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FormatFilter&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FilterConfig&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filterConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServletException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The filter &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FormatFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; has been created!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FilterChain&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServletException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// FormatRequestWrapper extends HttpServletRequestWrapper&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FormatRequestWrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpServletRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;format&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;format&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;InputParameterException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Missing format parameter!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;destroy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Destroy method is invoked for the servlet &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FormatFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: A web container uses filter mappings to decide how to apply filters to web resources. A filter mapping matches a filter to a web component by name or to web resources by URL pattern. The filters are invoked in the order in which filter mappings appear in the filter mapping list of a WAR.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Filter constrains:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;REQUEST&lt;/code&gt;: Request comes directly from the client.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ASYNC&lt;/code&gt;: Asynchronous request from the client.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FORWARD&lt;/code&gt;: Request has been forwarded to a component.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;INCLUDE&lt;/code&gt;: Request is being processed by a component that has been included.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ERROR&lt;/code&gt;: Request is being processed with the error page mechanism.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The default dispatcher type is &lt;code class=&quot;highlighter-rouge&quot;&gt;REQUEST&lt;/code&gt; and multiple types can be selected as follows:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@WebFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlPatterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/convert&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dispatcherTypes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DispatcherType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;REQUEST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DispatcherType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;FORWARD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FormatFilter&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// filter methods (doFilter(), init(), destroy())&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;event-listeners&quot;&gt;Event Listeners&lt;/h3&gt;

&lt;p&gt;Event Listeners are used to track events in your Web application. There are two types of servlet events:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Servlet context-level catches events about &lt;code class=&quot;highlighter-rouge&quot;&gt;ServletContext&lt;/code&gt; lifecycle changes.&lt;/li&gt;
  &lt;li&gt;Session-level events are about requests coming into and going out of scope of a web application.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Both types can catch lifecycle and attribute changes.&lt;/p&gt;

&lt;p&gt;You can implement &lt;code class=&quot;highlighter-rouge&quot;&gt;ServletRequestListener&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;ServletRequestAttributeListener&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;ServletContextAttributeListener&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;ServletContxtListener&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;HttpSessionAttributeListener&lt;/code&gt;… and use the &lt;code class=&quot;highlighter-rouge&quot;&gt;@WebListener&lt;/code&gt; annotation to define an event listener.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@WebListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Checks for new attributes during request&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NewAttributeListener&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServletRequestAttributeListener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;attributeAdded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServletRequestAttributeEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;servletRequestAttributeEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The attribute \&quot;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;servletRequestAttributeEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;\&quot; with value \&quot;&quot;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;servletRequestAttributeEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;\&quot; was added.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;attributeReplaced&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServletRequestAttributeEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;servletRequestAttributeEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;attributeRemoved&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServletRequestAttributeEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;servletRequestAttributeEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;exception-handling&quot;&gt;Exception Handling&lt;/h2&gt;

&lt;p&gt;The Servlet API provides support for custom servlet error handling. This can be configured in the &lt;code class=&quot;highlighter-rouge&quot;&gt;web.xml&lt;/code&gt; file in your project.&lt;/p&gt;

&lt;p&gt;Exceptions can be mapped to &lt;em&gt;Servlets&lt;/em&gt; or &lt;em&gt;JSP&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Mapping error to a servlet:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;error-page&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;exception-type&amp;gt;&lt;/span&gt;com.sergiomartinrubio.javaservletfilters.exception.InputParameterException&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exception-type&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;location&amp;gt;&lt;/span&gt;/ExceptionHandler&lt;span class=&quot;nt&quot;&gt;&amp;lt;/location&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/error-page&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Mapping error to JPS:&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;error-page&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;exception-type&amp;gt;&lt;/span&gt;com.sergiomartinrubio.javaservletfilters.exception.InputParameterException&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exception-type&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;location&amp;gt;&lt;/span&gt;/WEB-INF/jsp/400.jsp&lt;span class=&quot;nt&quot;&gt;&amp;lt;/location&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/error-page&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In either case you can access the error attributes in the request, so the exception response can be customized.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Request Attribute&lt;/th&gt;
      &lt;th&gt;Type&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;javax.servlet.error.status_code&lt;/td&gt;
      &lt;td&gt;java.lang.Integer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;javax.servlet.error.exception_type&lt;/td&gt;
      &lt;td&gt;java.lang.Class&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;javax.servlet.error.message&lt;/td&gt;
      &lt;td&gt;java.lang.String&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;javax.servlet.error.exception&lt;/td&gt;
      &lt;td&gt;java.lang.Throwable&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;javax.servlet.error.request_uri&lt;/td&gt;
      &lt;td&gt;java.lang.String&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;javax.servlet.error.servlet_name&lt;/td&gt;
      &lt;td&gt;java.lang.String&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Error codes can also be mapped as follows:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;error-page&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;error-code&amp;gt;&lt;/span&gt;500&lt;span class=&quot;nt&quot;&gt;&amp;lt;/error-code&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;location&amp;gt;&lt;/span&gt;/WEB-INF/jsp/400.jsp&lt;span class=&quot;nt&quot;&gt;&amp;lt;/location&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/error-page&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p class=&quot;text-center&quot;&gt;
&lt;a class=&quot;m-1 btn btn-outline-primary btn-2 &quot; href=&quot;https://github.com/smartinrub/java-servlets.git&quot;&gt;
  Source Code
&lt;/a&gt;
&lt;/p&gt;</content><author><name>Sergio Martin Rubio</name><email>me@sergiomartinrubio.com</email></author><category term="Java" /><category term="Web Applications" /><summary type="html"></summary></entry><entry><title type="html">Centralized Configuration With Spring Cloud Config Server</title><link href="http://localhost:4000/articles/centralized-configuration-with-spring-cloud-config-server" rel="alternate" type="text/html" title="Centralized Configuration With Spring Cloud Config Server" /><published>2019-10-21T00:00:00+01:00</published><updated>2019-10-21T00:00:00+01:00</updated><id>http://localhost:4000/articles/centralized-configuration-with-spring-cloud-config-server</id><content type="html" xml:base="http://localhost:4000/articles/centralized-configuration-with-spring-cloud-config-server">&lt;div class=&quot;list-group my-3&quot;&gt;

  
    &lt;a class=&quot;list-group-item list-group-item-action active disabled text-white&quot;&gt;Table of Contents&lt;/a&gt;
  

  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#getting-started&quot;&gt;
Getting Started&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#client-side&quot;&gt;
Client Side&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#server-side&quot;&gt;
Server Side&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#encrypted-properties&quot;&gt;
Encrypted Properties&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#symmetric&quot;&gt;
Symmetric&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#asymmetric&quot;&gt;
Asymmetric&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#dynamic-configuration-changes&quot;&gt;
Dynamic Configuration Changes&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#other-features&quot;&gt;
Other Features&lt;/a&gt;
    
  

&lt;/div&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://cloud.spring.io/spring-cloud-config/reference/html/&quot;&gt;Spring Cloud Config Server&lt;/a&gt; provides remote configuration for your Spring applications or any application running in any language. This tool has been out there for a long time, so it is very mature and reliable. Spring Cloud Config Server comes in handy when you need to set up configurations for microservices in multiple environments, so you can manage properties separately and avoid the hassle of triggering application builds when only the configuration is updated.&lt;/p&gt;

&lt;h2 id=&quot;getting-started&quot;&gt;Getting Started&lt;/h2&gt;

&lt;p&gt;By default &lt;em&gt;Spring Cloud Config Server&lt;/em&gt; uses git to store the configuration files, however you could write your own implementation and use a different version control system (VCS).&lt;/p&gt;

&lt;p&gt;Clients retrieve the configuration through Spring Cloud Config Server and both client and server have to be mapped to the Spring &lt;code class=&quot;highlighter-rouge&quot;&gt;Environment&lt;/code&gt;, which contains:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{application}&lt;/code&gt; is &lt;code class=&quot;highlighter-rouge&quot;&gt;spring.application.name&lt;/code&gt; on the client side.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{profile}&lt;/code&gt; is &lt;code class=&quot;highlighter-rouge&quot;&gt;spring.profiles.active&lt;/code&gt; on the client.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{label}&lt;/code&gt; is the commit id, branch name, or tag.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Property files can be named and located as follows:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; /&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;application&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;/&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;profile&lt;span class=&quot;o&quot;&gt;}[&lt;/span&gt;/&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;label&lt;span class=&quot;o&quot;&gt;}]&lt;/span&gt;
 /&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;application&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;-&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;profile&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;.yml
 /&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;label&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;/&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;application&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;-&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;profile&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;.yml
 /&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;application&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;-&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;profile&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;.properties
 /&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;label&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;/&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;application&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;-&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;profile&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;.properties
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: Active profiles take precedence over defaults. When multiple profiles are selected, the last one will be chosen.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: If the git branch or tag name contains slashes (&lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt;) they must be replaced with underscores (&lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt;).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;client-side&quot;&gt;Client Side&lt;/h3&gt;

&lt;p&gt;The following Maven dependency is required on the config server clients:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.cloud&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-cloud-starter-config&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;then you only need to set a few Spring properties in &lt;code class=&quot;highlighter-rouge&quot;&gt;bootstrap.yml&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;spring&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;first-client&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;cloud&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http://localhost:8888&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;profiles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;na&quot;&gt;active&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;development&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;where the &lt;code class=&quot;highlighter-rouge&quot;&gt;spring.application.name&lt;/code&gt; will be mapped to the &lt;code class=&quot;highlighter-rouge&quot;&gt;{application}&lt;/code&gt; part of the property file stored in git; &lt;code class=&quot;highlighter-rouge&quot;&gt;spring.cloud.config.uri&lt;/code&gt; is the &lt;code class=&quot;highlighter-rouge&quot;&gt;Spring Config Server&lt;/code&gt; application address; and &lt;code class=&quot;highlighter-rouge&quot;&gt;spring.profiles.active&lt;/code&gt; will be mapped to the &lt;code class=&quot;highlighter-rouge&quot;&gt;{profile}&lt;/code&gt; part of the property file. Addionally, you could set &lt;code class=&quot;highlighter-rouge&quot;&gt;spring.cloud.config.label&lt;/code&gt; which would be mapped to the commit id, branch name, or tag. For the previous example you should have a property file named &lt;code class=&quot;highlighter-rouge&quot;&gt;first-client-development.yml&lt;/code&gt; on your git config repo in order to use the remote cofiguration.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: Remember that &lt;code class=&quot;highlighter-rouge&quot;&gt;bootstrap.yml&lt;/code&gt; is loaded before &lt;code class=&quot;highlighter-rouge&quot;&gt;application.yml&lt;/code&gt;, and so the first one is needed if your application’s configuration is stored on a remote configuration server and properties need to be decrypted.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;server-side&quot;&gt;Server Side&lt;/h3&gt;

&lt;p&gt;The Maven dependency required on the server side is:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.cloud&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-cloud-config-server&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By simply using the &lt;code class=&quot;highlighter-rouge&quot;&gt;@EnableConfigServer&lt;/code&gt; annotation, Spring Cloud Cloud is configured in the Spring Boot application.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@EnableConfigServer&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@SpringBootApplication&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ConfigServerApplication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SpringApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConfigServerApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;also a couple of properties have to be set on the application property file:&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;8888&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spring&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;cloud&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://github.com/smartinrub/spring-cloud-bus-config-server.git&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;where &lt;code class=&quot;highlighter-rouge&quot;&gt;server.port&lt;/code&gt; is used to run the application in a particular port; and &lt;code class=&quot;highlighter-rouge&quot;&gt;spring.cloud.config.server.git.uri&lt;/code&gt; is the git repository URL where the property files are stored.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: You could create a git repository on your local machine, commit the changes and set &lt;code class=&quot;highlighter-rouge&quot;&gt;spring.cloud.config.server.git.uri&lt;/code&gt; to somthing like &lt;code class=&quot;highlighter-rouge&quot;&gt;file://${user.home}/config-repo&lt;/code&gt;, so you can test your configuration locally.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;encrypted-properties&quot;&gt;Encrypted Properties&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Spring Cloud Config Server&lt;/em&gt; supports property encryption. You can use either symmetric or asymmetric key encryption. Spring recommends to use a symmetric key since you will only need to configure a single value in the bootstrap property file, however you might want to use asymmetric keys if you want to increase the security.&lt;/p&gt;

&lt;p&gt;You can encrypt and decrypt properties with &lt;code class=&quot;highlighter-rouge&quot;&gt;/encrypt&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;/decrypt&lt;/code&gt; endpoints, or use the &lt;a href=&quot;https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-cli.html&quot;&gt;Spring CLI tool&lt;/a&gt; with the &lt;a href=&quot;https://spring.io/projects/spring-cloud-cli&quot;&gt;Spring Cloud plugin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For instance, you can encrypt a property like this:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl localhost:8888/encrypt &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; mysecret
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and to decrypt it like this:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl localhost:8888/decrypt &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; 682bc583f4641835fa2db009355293665d2647dade3375c0ee201de2a49f7bda
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: Encrypted vales require the prefix &lt;code class=&quot;highlighter-rouge&quot;&gt;{cipher}&lt;/code&gt; when you put them in &lt;code class=&quot;highlighter-rouge&quot;&gt;application.properties&lt;/code&gt; (or &lt;code class=&quot;highlighter-rouge&quot;&gt;.yml&lt;/code&gt;).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;symmetric&quot;&gt;Symmetric&lt;/h4&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${ENCRYPT_KEY}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;## any string&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To configure a symmetric key, you need to set &lt;code class=&quot;highlighter-rouge&quot;&gt;encrypt.key&lt;/code&gt; to a plain text string in Spring &lt;em&gt;Cloud Config Server&lt;/em&gt; (the client does not require this key since values are decrypted automatically before they are sent to the client) and set the &lt;code class=&quot;highlighter-rouge&quot;&gt;ENCRYPT_KEY&lt;/code&gt; environment variable to keep it out of plain-text repository files. For example, you can pass it using Jenkins while running your pipeline.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Important: &lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-config/issues/1493&quot;&gt;Automatic decryption is not working for 2.2.0.M3&lt;/a&gt; when headers contain &lt;code class=&quot;highlighter-rouge&quot;&gt;application/vnd.spring-cloud.config-server.v2+json&lt;/code&gt;, since &lt;code class=&quot;highlighter-rouge&quot;&gt;includeOrigin&lt;/code&gt; is set to true. This is happening because the property source now contains a  &lt;code class=&quot;highlighter-rouge&quot;&gt;PropertyValueDescriptor&lt;/code&gt; instead of a string value, so &lt;code class=&quot;highlighter-rouge&quot;&gt;toString()&lt;/code&gt; method returns the object address. In the meantime you are force to decrypt the values in the client by setting the &lt;code class=&quot;highlighter-rouge&quot;&gt;encrypt.key&lt;/code&gt; property.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: &lt;code class=&quot;highlighter-rouge&quot;&gt;ENCRYPT_KEY&lt;/code&gt; overrides &lt;code class=&quot;highlighter-rouge&quot;&gt;encrypt.key&lt;/code&gt; value.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can also disable decryption of properties before sending them to the client. To do this you have to set &lt;code class=&quot;highlighter-rouge&quot;&gt;spring.cloud.config.server.encrypt.enabled&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; is the default value). When this property is set to &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;encrypt.key&lt;/code&gt; is required in the client for decryption during start up.&lt;/p&gt;

&lt;h4 id=&quot;asymmetric&quot;&gt;Asymmetric&lt;/h4&gt;

&lt;p&gt;The symmetric key is superior in terms of security, but it is usually less convinient since you have to set a few properties.&lt;/p&gt;

&lt;p&gt;A keystore is needed to set up an asymmetric key. This requires a password which itself would have to be stored unencrypted and then set the keystore password as an environment variable.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;keytool &lt;span class=&quot;nt&quot;&gt;-genkeypair&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-alias&lt;/span&gt; myKeyStore &lt;span class=&quot;nt&quot;&gt;-keyalg&lt;/span&gt; RSA &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-dname&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;CN=Web Server,OU=Unit,O=Organization,L=City,S=State,C=US&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-keystore&lt;/span&gt; server.jks &lt;span class=&quot;nt&quot;&gt;-storepass&lt;/span&gt; password123
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally, set the keystore configuration in the &lt;em&gt;Spring Cloud Config Server&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;key-store&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;classpath:keys/server.jks&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${ENCRYPT_KEY}&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;myKeyStore&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: If a property cannot be decrypted the value will be replaced with &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;n/a&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;dynamic-configuration-changes&quot;&gt;Dynamic Configuration Changes&lt;/h3&gt;

&lt;p&gt;Another important feature of &lt;em&gt;Spring Cloud Config Server&lt;/em&gt; is the posibility of refreshing the client configuration at runtime without restarting the JVM. By default, configuration values are read on the client’s startup. To take advantage of this feature you need to enable the &lt;code class=&quot;highlighter-rouge&quot;&gt;/refresh&lt;/code&gt; endpoint. To do so, go to your client application properties file and include the endpoint:&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;management&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;endpoints&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;exposure&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;refresh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: &lt;code class=&quot;highlighter-rouge&quot;&gt;spring-boot-starter-actuator&lt;/code&gt; dependency is required in order to activate management endpoints.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once the endpoint is enabled in the client you can hit the &lt;code class=&quot;highlighter-rouge&quot;&gt;/refresh&lt;/code&gt; endpoint:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST localhost:8080/actuator/refresh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: &lt;strong&gt;What’s happening under the hood?&lt;/strong&gt; The &lt;code class=&quot;highlighter-rouge&quot;&gt;ContextRefresher&lt;/code&gt; class is called, then it iterates through all the property sources and searches for changes, publishes an event to signal a change in the environment and finally it destroys the current instance of all beans in this scope and forces a refresh on next method execution.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As you can see this is a very nice feature, however it is not very convinient out-of-the-box, because once you start having many services running refreshing each one will become a hassle, that’s why Spring provides a practical way to trigger the refresh event for all related services when property change, and this can be achieved with &lt;a href=&quot;https://cloud.spring.io/spring-cloud-bus/reference/html/&quot;&gt;Spring Cloud Bus&lt;/a&gt;. How does it work? When the refresh event of one of the services is triggered, this event is automatically broadcasted through all the other services by using a message broker, and this can be traslated as a distributed &lt;strong&gt;Actuator&lt;/strong&gt;.&lt;/p&gt;

&lt;figure class=&quot;figure w-100&quot;&gt;
  &lt;img src=&quot;https://lh3.googleusercontent.com/miHCBc1VpFzGFG3SW3mqLSVFE8iGHew2vGhpDdi8gxB8jglRk2qe5G9LBUXwdopQfMPseQV_2nXZMbUbJcLUNelLUm5k5Vk66faEUUfDXTSKurO2bLBdak3JHGWxUmMO__ZyYOchWw=w1000&quot; class=&quot;figure-img img-fluid rounded&quot; alt=&quot;Spring Cloud Config Server Diagram&quot; /&gt;
  
    &lt;figcaption class=&quot;figure-caption text-center&quot;&gt;Spring Cloud Config Server Diagram&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Spring Cloud Bus uses a message broker, and you can choose between &lt;a href=&quot;https://www.rabbitmq.com&quot;&gt;RabbitMQ&lt;/a&gt; or &lt;a href=&quot;http://kafka.apache.org&quot;&gt;Kafka&lt;/a&gt;. In case of &lt;em&gt;RabbitQM&lt;/em&gt; you can &lt;a href=&quot;https://hub.docker.com/_/rabbitmq/&quot;&gt;run it with Docker&lt;/a&gt; as follows:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--hostname&lt;/span&gt; my-rabbit &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; some-rabbit &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 15672:15672 &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 5672:5672 rabbitmq:3-management
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and add the following dependency to all the client services:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.cloud&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-cloud-starter-bus-amqp&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In order to enable &lt;code class=&quot;highlighter-rouge&quot;&gt;/actuator/bus-refresh&lt;/code&gt; you have to add another exclusion in the services consuming the properties:&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;management&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;endpoints&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;exposure&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;refresh, bus-refresh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now if you hit the endpoint &lt;code class=&quot;highlighter-rouge&quot;&gt;/actuator/bus-refresh&lt;/code&gt; of one of your services:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST localhost:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;server-port&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;/actuator/bus-refresh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;the selected service will publish a refresh event in the chosen message broker and will broadcast it across all the connected services.&lt;/p&gt;

&lt;p&gt;The broker message configuration can be shared by creating a &lt;code class=&quot;highlighter-rouge&quot;&gt;application.yml&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;application.properties&lt;/code&gt; to the root of your configuration repo and adding the connection properties to it.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: Any property that is added in to the &lt;code class=&quot;highlighter-rouge&quot;&gt;application.properties&lt;/code&gt; (or &lt;code class=&quot;highlighter-rouge&quot;&gt;.yml&lt;/code&gt;) in the root of your configuration repository is shared among all services. This is very useful when you want to share common configuration (like database addresses) across applications.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;whats-next&quot;&gt;What’s next?&lt;/h4&gt;

&lt;p&gt;You can go a step further by automating the task of hitting the bus refresh endpoint. Many source code repositories like GitHub, Gitlab or Bitbucket notify you of changes in a repository through a &lt;a href=&quot;https://developer.github.com/webhooks/&quot;&gt;webhook&lt;/a&gt;. The &lt;a href=&quot;https://cloud.spring.io/spring-cloud-config/multi/multi__push_notifications_and_spring_cloud_bus.html&quot;&gt;webhook can be configured to listen changes in your config repo and broadcasting the refresh event for the all connected services through Spring Cloud Bus&lt;/a&gt;.&lt;/p&gt;

&lt;figure class=&quot;figure w-100&quot;&gt;
  &lt;img src=&quot;https://lh3.googleusercontent.com/SNicX8hqYJ_D_WMTQiE3fMc88PYqfe5NWn7gffw3xXxxZLDsqVhYKOxu7MWrQ17GhUEvJ1qYN66UBjOijojPXySYZxFPcrkn8cudR4BZQM616P88mWdfw-P0DfXhC5hl1slyBKlJLQ=w1000&quot; class=&quot;figure-img img-fluid rounded&quot; alt=&quot;Spring Cloud Config Server With Webhook Diagram&quot; /&gt;
  
    &lt;figcaption class=&quot;figure-caption text-center&quot;&gt;Spring Cloud Config Server With Webhook Diagram&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;A couple of dependencies in the Spring Cloud Config server are needed to make this work:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.cloud&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-cloud-starter-stream-rabbit&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.cloud&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-cloud-config-monitor&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and set to true &lt;code class=&quot;highlighter-rouge&quot;&gt;spring.cloud.bus.enabled&lt;/code&gt; property in &lt;code class=&quot;highlighter-rouge&quot;&gt;application.yml&lt;/code&gt; (or &lt;code class=&quot;highlighter-rouge&quot;&gt;.properties&lt;/code&gt;). Finally, you have to set up a webhook on Github as follows:&lt;/p&gt;

&lt;figure class=&quot;figure w-100&quot;&gt;
  &lt;img src=&quot;https://lh3.googleusercontent.com/rgL3p_tEbYVIs3mQVfr7dmV1BOyD8LOwYv_pizN-h1PgomG9ScA3lCMeQ4Yzs2cM-BY13JtLLcCkGaupX8UmO1sSzYTy5860ceETXYKSC8Kt9NCNyA_oBurqz0rUPpFa6CofSzh2Tw=w1000&quot; class=&quot;figure-img img-fluid rounded&quot; alt=&quot;Spring Cloud Config Server GitHub Webhooks&quot; /&gt;
  
    &lt;figcaption class=&quot;figure-caption text-center&quot;&gt;Spring Cloud Config Server GitHub Webhooks&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;figure class=&quot;figure w-100&quot;&gt;
  &lt;img src=&quot;https://lh3.googleusercontent.com/P8iTW8qq9SlaiSI-uC2uzLCk-OSWH01lexYdPlvXmOZTbVRwmnFLFbwivH3npV5E0DDP2Kc9YaZABbbWyAxH8cSCxr4szTzgK1ciQeXvnm3neZelg4NPK_sDeZOiUDYoP-vThcbOHQ=w1000&quot; class=&quot;figure-img img-fluid rounded&quot; alt=&quot;GitHub Webhooks Deliveries&quot; /&gt;
  
    &lt;figcaption class=&quot;figure-caption text-center&quot;&gt;GitHub Webhooks Deliveries&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;To try this out you can either make the Spring Cloud Config Server application public or you can simulate a git push notification request.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST &lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:8888/monitor&quot;&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'X-GitHub-Event: push'&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Content-Type: application/json&quot;&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{
    &quot;commits&quot;: [
        {
            &quot;modified&quot;: [
                &quot;application.yml&quot;
            ]
        }
    ]
}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: To make your application public you could set up you router with a port forwarding rule.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The config server application will create a refresh event in the message broker and based on the application name used for the property file name, it will send the refresh event to the services that need to be refreshed.&lt;/p&gt;

&lt;h3 id=&quot;other-features&quot;&gt;Other Features&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Set multiple repositories with &lt;code class=&quot;highlighter-rouge&quot;&gt;spring.cloud.config.server.git.repo&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Set the timeout for retrieving properties from git with &lt;code class=&quot;highlighter-rouge&quot;&gt;spring.cloud.config.server.git.timeout&lt;/code&gt; (default value is 5 seconds).&lt;/li&gt;
  &lt;li&gt;Force the pull from git if you set &lt;code class=&quot;highlighter-rouge&quot;&gt;spring.cloud.config.server.git.force-pull&lt;/code&gt; to true.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;text-center&quot;&gt;
&lt;a class=&quot;m-1 btn btn-outline-primary btn-2 &quot; href=&quot;https://github.com/smartinrub/spring-cloud-bus-config-server&quot;&gt;
  Source Code
&lt;/a&gt;
&lt;/p&gt;</content><author><name>Sergio Martin Rubio</name><email>me@sergiomartinrubio.com</email></author><category term="Spring" /><category term="Spring Boot" /><category term="Spring Cloud" /><category term="Configuration" /><category term="Microservices" /><summary type="html"></summary></entry><entry><title type="html">Automated Dependency Updates With Dependabot</title><link href="http://localhost:4000/articles/automated-dependency-updates-with-dependabot" rel="alternate" type="text/html" title="Automated Dependency Updates With Dependabot" /><published>2019-10-10T00:00:00+01:00</published><updated>2019-10-10T00:00:00+01:00</updated><id>http://localhost:4000/articles/automated-dependency-updates-with-dependabot</id><content type="html" xml:base="http://localhost:4000/articles/automated-dependency-updates-with-dependabot">&lt;div class=&quot;list-group my-3&quot;&gt;

  
    &lt;a class=&quot;list-group-item list-group-item-action active disabled text-white&quot;&gt;Table of Contents&lt;/a&gt;
  

  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#package-manger-options&quot;&gt;
Package Manger Options&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#github-integration-guide&quot;&gt;
GitHub Integration Guide&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#advance-integrations&quot;&gt;
Advance Integrations&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#conclusion&quot;&gt;
Conclusion&lt;/a&gt;
    
  

&lt;/div&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dependabot.com&quot;&gt;Dependabot&lt;/a&gt; is a free and open source tool that has been bought by &lt;em&gt;GitHub&lt;/em&gt; and allows you to check for updates on you dependency files.&lt;/p&gt;

&lt;p&gt;It can be used to update dependencies in &lt;em&gt;Ruby&lt;/em&gt;, &lt;em&gt;JavaScript&lt;/em&gt;, &lt;em&gt;Python&lt;/em&gt;, &lt;em&gt;PHP&lt;/em&gt;, &lt;em&gt;Elixir&lt;/em&gt;, &lt;em&gt;Elm&lt;/em&gt;, &lt;em&gt;Go&lt;/em&gt;, &lt;em&gt;Rust&lt;/em&gt;, &lt;em&gt;Java&lt;/em&gt; and &lt;em&gt;.NET&lt;/em&gt;, as well as, git submodules, &lt;em&gt;Docker&lt;/em&gt; files and &lt;em&gt;Terraform&lt;/em&gt; files.&lt;/p&gt;

&lt;h2 id=&quot;package-manger-options&quot;&gt;Package Manger Options&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;bundler&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;pip&lt;/em&gt; (includes pipenv)&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;npm_and_yarn&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;maven&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;gradle&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;cargo&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;hex&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;composer&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;nuget&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;dep&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;go_modules&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;elm&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;submodules&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;docker&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;terraform&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;github-integration-guide&quot;&gt;GitHub Integration Guide&lt;/h2&gt;

&lt;p&gt;Dependabot is fully integrated with GitHub and only in a few steps you will be able to add it to your current GitHub projects.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go to &lt;a href=&quot;https://dependabot.com&quot;&gt;Dependabot site&lt;/a&gt; or &lt;a href=&quot;https://github.com/marketplace?utf8=%E2%9C%93&amp;amp;query=dependabot&quot;&gt;GitHub marketplace and search for Dependabot&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Install Dependabot to your GitHub account.
 &lt;img src=&quot;https://lh3.googleusercontent.com/2LF49w-QRKtX7eEMkjZM83Dn6eJVvdKblx7dRomTj9QKBZ7zZHIf2BKDohN-1eXZmUU4DJUeibuE2FhSeg=w600-no-tmp.jpg&quot; alt=&quot;alt text&quot; title=&quot;Install Dependabot GitHub&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Give permission to all your repositories or selected ones.
 &lt;img src=&quot;https://lh3.googleusercontent.com/w-nGjPm9AMsVfvkcbSYhu9j482Z55OUdrhOSA6tFupSXRFv9tTD2f2ZAFn6AHRGzLC_MMDGHGK4t-aj8Fg=w600-no-tmp.jpg&quot; alt=&quot;alt text&quot; title=&quot;Install Dependabot Preview&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Start adding repositories to the Dependabot dashboard.
 &lt;img src=&quot;https://lh3.googleusercontent.com/j4edb8TzKBqykrV_j62qvPQ0ME5NCH3YCD--UynTcIwPdHzUZdxJEshexS-4IdIkX5Evil88lN_tGXNP-Q=w600-no-tmp.jpg&quot; alt=&quot;alt text&quot; title=&quot;Add Repos Dependabot&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Tweat Dependabot settings for your projects: how frequent it runs (daily, weekly…), directory, branch, GitHub Pull Requests info…
 &lt;img src=&quot;https://lh3.googleusercontent.com/WTi5NcbLw96prl8jRf9HXQ9FJJRmWQVJsddeGyLXG_5Asqcdw9Vqdv5-esoIN_L1tb7Ps92MLW27zOUkyw=w800-no-tmp.jpg&quot; alt=&quot;alt text&quot; title=&quot;Depedabot Project Settings&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Run Dependabot and review PR. A relevant branch name, PR title, comment and labels are created.
 &lt;img src=&quot;https://lh3.googleusercontent.com/cnB2V_3V22hqUt4vH57167KfX-bKA7Z75523xiZfIdwbvGnx5ykJNBaHiqGLDHRujoVP_nUSZ7-9s5C6kw=w800-no-tmp.jpg&quot; alt=&quot;alt text&quot; title=&quot;Depedabot Pull Request&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;breaking-changes&quot;&gt;Breaking Changes&lt;/h3&gt;

&lt;p&gt;Dependabot also provides a way to give you more confidence in case of possible breaking changes. From the PR page a link is shown and it will take you to a page where you can see PRs that failed CI.&lt;/p&gt;

&lt;figure class=&quot;figure w-100&quot;&gt;
  &lt;img src=&quot;https://lh3.googleusercontent.com/SmtZ5Ujm1c9x6L5Tp1rm3frPr8nn9PchqU1VD0Y5nmMtew5vwvVRU4NHN9t_czdbaSyVVhC7-QqBwA51QA=w800-no-tmp.jpg&quot; class=&quot;figure-img img-fluid rounded&quot; alt=&quot;Dependabot Compatibility Rate&quot; /&gt;
  
    &lt;figcaption class=&quot;figure-caption text-center&quot;&gt;Dependabot Compatibility Rate&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;How does it work?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Dependabot retrieves metrics of similar updates from other repos.&lt;/li&gt;
  &lt;li&gt;It creates a score based on each repo that runs a CI with passed test suite.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;figure w-100&quot;&gt;
  &lt;img src=&quot;https://lh3.googleusercontent.com/BeLflCYfw-UbUS4qOro8GMjzoAJGE44bYhztT6peQp_t7c1g0WpByBgI6MKtos2wEtkYbC8H1BMvXUYqTA=w800-no-tmp.jpg&quot; class=&quot;figure-img img-fluid rounded&quot; alt=&quot;Compatibility Score Page&quot; /&gt;
  
    &lt;figcaption class=&quot;figure-caption text-center&quot;&gt;Compatibility Score Page&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: private repositories are not included on the score calculation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;However, to be 100% sure that you are not introducing breaking changes with the dependecy updates, you should create a build with the new branch created by Dependabot.&lt;/p&gt;

&lt;h2 id=&quot;advance-integrations&quot;&gt;Advance Integrations&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Dependabot&lt;/strong&gt; can be also used by itself. The oficial repository provides a &lt;a href=&quot;https://github.com/dependabot/dependabot-script&quot;&gt;&lt;em&gt;Ruby&lt;/em&gt; script&lt;/a&gt; that you can run with &lt;em&gt;Docker&lt;/em&gt;. Another option is to create a repository dedicated to the script and configure a &lt;em&gt;GitLab CI&lt;/em&gt; pipeline to run it periodically.&lt;/p&gt;

&lt;p&gt;For instance, you could setup a &lt;strong&gt;GitLab CI&lt;/strong&gt; with an &lt;strong&gt;Azure&lt;/strong&gt; repo by following the next steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Clone the &lt;a href=&quot;https://github.com/dependabot/dependabot-script.git&quot;&gt;dependabot-script repo&lt;/a&gt; and create a new project on &lt;strong&gt;GitLab&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Rename &lt;code class=&quot;highlighter-rouge&quot;&gt;.gitlab-ci.example.yml&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;.gitlab-ci.yml&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Get the values of the required global variables:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AZURE_ACCESS_TOKEN&lt;/code&gt; -&amp;gt; Go to your &lt;em&gt;Azure Devops profile&lt;/em&gt;, &lt;em&gt;Security&lt;/em&gt;, &lt;em&gt;Personal access tokens&lt;/em&gt;, &lt;em&gt;+ New Token&lt;/em&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;PROJECT_PATH&lt;/code&gt; -&amp;gt; For &lt;em&gt;https://dev.azure.com/econsergio/_git/spring-boot-demo&lt;/em&gt; will be &lt;code class=&quot;highlighter-rouge&quot;&gt;econsergio/_git/spring-boot-demo&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;PACKAGE_MANAGER_SET&lt;/code&gt; -&amp;gt; &lt;em&gt;maven&lt;/em&gt; for this example&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Create a new pipeline schedule -&amp;gt; Go to &lt;em&gt;CI/CD&lt;/em&gt;, &lt;em&gt;Schedules&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Set in the schedule the required variables&lt;/li&gt;
  &lt;li&gt;The script creates a branch and PR on &lt;em&gt;Azure&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;figure w-100&quot;&gt;
  &lt;img src=&quot;https://lh3.googleusercontent.com/f-IlBiczAsWjFzgZahHugQ4vLGsD3qUTChuJl1vCT11IYsWJ9ysoJrP5sjXYD7VDUc7y3aMz1EctSw_QVQ=w800-no-tmp.jpg&quot; class=&quot;figure-img img-fluid rounded&quot; alt=&quot;Azure Dependabot Branch&quot; /&gt;
  
    &lt;figcaption class=&quot;figure-caption text-center&quot;&gt;Azure Dependabot Branch&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;figure class=&quot;figure w-100&quot;&gt;
  &lt;img src=&quot;https://lh3.googleusercontent.com/MRbvNKE_m5SkUZY5wgkEup_6tf0Vzu23rEI8cEsta-FzIeYMf8Tz7zeaBVwa7wjP1M9UHul3C1-lv5pq4Q=w800-no-tmp.jpg&quot; class=&quot;figure-img img-fluid rounded&quot; alt=&quot;Azure Dependabot Dependecy Diff Updates&quot; /&gt;
  
    &lt;figcaption class=&quot;figure-caption text-center&quot;&gt;Azure Dependabot Dependecy Diff Updates&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;figure class=&quot;figure w-100&quot;&gt;
  &lt;img src=&quot;https://lh3.googleusercontent.com/KK1HqPnX3wTNFH2qT5ljWRjmDMWn1UJw6dBaeawaNYklHd7F27sjrZn_A27rNu-xrsk_Mov6ggkkqQC1kQ=w800-no-tmp.jpg&quot; class=&quot;figure-img img-fluid rounded&quot; alt=&quot;Azure Dependabot PR&quot; /&gt;
  
    &lt;figcaption class=&quot;figure-caption text-center&quot;&gt;Azure Dependabot PR&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;As you can see Dependabot is very flexible and will take care of all your projects dependency updates. Despite it has been adquired by GitHub, you can run it on GitLab and point to projects on &lt;strong&gt;Azure&lt;/strong&gt; or &lt;strong&gt;GitLab&lt;/strong&gt;.&lt;/p&gt;</content><author><name>Sergio Martin Rubio</name><email>me@sergiomartinrubio.com</email></author><category term="Dependency Management" /><category term="Git" /><summary type="html"></summary></entry><entry><title type="html">Java Memory Model Overview</title><link href="http://localhost:4000/articles/java-memory-model-overview" rel="alternate" type="text/html" title="Java Memory Model Overview" /><published>2019-07-31T00:00:00+01:00</published><updated>2019-07-31T00:00:00+01:00</updated><id>http://localhost:4000/articles/java-memory-model-overview</id><content type="html" xml:base="http://localhost:4000/articles/java-memory-model-overview">&lt;div class=&quot;list-group my-3&quot;&gt;

  
    &lt;a class=&quot;list-group-item list-group-item-action active disabled text-white&quot;&gt;Table of Contents&lt;/a&gt;
  

  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#heap-memory&quot;&gt;
Heap Memory&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#young-generation&quot;&gt;
Young Generation&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#old-generation&quot;&gt;
Old Generation&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#generational-garbage-collection-process&quot;&gt;
Generational Garbage Collection Process&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#garbage-collector-selection&quot;&gt;
Garbage Collector Selection&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#metaspace&quot;&gt;
Metaspace&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#stack-memory&quot;&gt;
Stack Memory&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#code-cache&quot;&gt;
Code Cache&lt;/a&gt;
    
  

&lt;/div&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;The JVM uses its own memory model and as soon as it is launch the system allocates memory for the process, and this memory is shared by:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Heap Memory&lt;/strong&gt;: Java objects are stored in one of the &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-2.html#jvms-2.5.3&quot;&gt;heap&lt;/a&gt; areas.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.baeldung.com/java-permgen-metaspace&quot;&gt;Metaspace&lt;/a&gt;&lt;/strong&gt;: since Java 8 it has replaced the older PermGen memory space to provide a more flexible and reliable memory usage.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Stack Memory&lt;/strong&gt;: a &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-2.html#jvms-2.5.2&quot;&gt;JVM stack&lt;/a&gt; is created for each thread and used to store local variables and partial results, perform dynamic linking, return values from methods and dispatch exceptions.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/embedded/develop-apps-platforms/codecache.htm&quot;&gt;Codecache&lt;/a&gt;&lt;/strong&gt;: it is mostly used by the just-in-time (JIT) to store bytecode compiled into native code.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;figure w-100&quot;&gt;
  &lt;img src=&quot;https://lh3.googleusercontent.com/wfKu7pzoAPH-H9VS0w6K2MGn4vVVTU3Q2nM0P-bbl8SlJS6AfFicTDprqv0YGLqA4LpV4elWl7GCBjgNOVkIojcmqmPibGUMzu9Fi2rQ5uAWz1B4GJTALu8gTINW0PtgrH_7AB9sWQ=w800&quot; class=&quot;figure-img img-fluid rounded&quot; alt=&quot;JVM Memory Model&quot; /&gt;
  
    &lt;figcaption class=&quot;figure-caption text-center&quot;&gt;JVM Memory Model&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;h3 id=&quot;heap-memory&quot;&gt;Heap Memory&lt;/h3&gt;

&lt;p&gt;The heap memory is divided into two areas or generations, young (also called nursery) and old generation.  The heap is where your object data is stored and it is managed by the &lt;a href=&quot;https://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html&quot;&gt;Garbage Collector&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Garbage collection: is the process of looking at the heap memory to clean up the unused objects. An Used object is a referenced object, which means that  somewhere in your program there is something pointing to that object. In other languages like C this is a manual process whereas in Java is handled automatically.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;young-generation&quot;&gt;Young Generation&lt;/h4&gt;

&lt;p&gt;If the young generation fills up, this causes a minor garbage collection and it triggers a &lt;em&gt;Stop the World&lt;/em&gt;. Surviving objects are moved to the old generation.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;Stop the World&lt;/em&gt;: All the application threads are stoped until a particular operation finishes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Inside the Young Generation there are three areas: Eden, Survivor Space 0, and Survivor Space 1.&lt;/p&gt;

&lt;h4 id=&quot;old-generation&quot;&gt;Old Generation&lt;/h4&gt;

&lt;p&gt;The Old Generation is used to store long surviving objects. To clasify an object as a candidate to be moved from the young generation to the old generation a threshold is set. Eventually the old generation needs to be collected and this event is called a major garbage collection.&lt;/p&gt;

&lt;p&gt;A mayor garbage collection is also a &lt;em&gt;Stop the World&lt;/em&gt; event. However, this type of Stop the World is much slower since it involves live objects, so this kind of events should be minimized.&lt;/p&gt;

&lt;h4 id=&quot;generational-garbage-collection-process&quot;&gt;Generational Garbage Collection Process&lt;/h4&gt;

&lt;p&gt;The Garbage Collector is an automatic process reponsible for identifying and delete unsed objects. Steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;New objects are put in the eden and survivor spaces start empty.&lt;/li&gt;
  &lt;li&gt;When the eden space is full a minor garbage collection is triggered. Referenced objects are moved to the first survivor space (S0) and unreferenced objects are removed.&lt;/li&gt;
  &lt;li&gt;Next time the eden fills up it will happen the same, but this time referenced objects are moved to the second survivor space (S1), and referenced objects from S0 are also moved to S1 and age is incremented. Unreferenced object in S0 are removed.&lt;/li&gt;
  &lt;li&gt;During the next minor GC, the same process occurs, but this time survivor spaces switch. Referenced objects are moved to S0, survivors are aged and unreferenced objects from eden and S1 are removed.&lt;/li&gt;
  &lt;li&gt;When objects reach a particular age they are promoted from the young generation to the old generation.&lt;/li&gt;
  &lt;li&gt;The previous 5 steps repeat until a major GC is performed on the old generation which cleans up and compact the space.&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;figure w-100&quot;&gt;
  &lt;img src=&quot;https://lh3.googleusercontent.com/5li9Ai49SfxisvdcKlUS3s3ryvNSn7yDeGq4CsLC3dORyuumzV3ih41jXfNr0Q-gH_tLIc58as8CLybPTng8D7Uar1cCRN4r4lD8jDTfmP2YBIVRcsbmkzhcriQ0tnA1pJO1-xqEnQ=w800&quot; class=&quot;figure-img img-fluid rounded&quot; alt=&quot;Generational Garbage Collection Process Diagram&quot; /&gt;
  
    &lt;figcaption class=&quot;figure-caption text-center&quot;&gt;Generational Garbage Collection Process Diagram&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;h4 id=&quot;garbage-collector-selection&quot;&gt;Garbage Collector Selection&lt;/h4&gt;

&lt;p&gt;When no Garbage Collector is selected by CLI (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:+UseSerialGC&lt;/code&gt;), the JVM selects a GC base on the platform is running on, heap size and runtime compiler. The process of selecting a particular GC is called &lt;strong&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/technotes/guides/vm/gctuning/ergonomics.html#ergonomics&quot;&gt;Ergonomics&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://javapapers.com/java/types-of-java-garbage-collectors/&quot;&gt;HotSpot Garbage Collection Types&lt;/a&gt;:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Young Generation Collection&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Serial&lt;/strong&gt; (S GC) is a stop-the-world. It uses a single thread for garbage collection and freezes all the threads while doing the garbage collection.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Parallel Scavenge&lt;/strong&gt; is a stop-the-world, copying collector that uses multiple GC threads&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;ParNew&lt;/strong&gt; (P GC) is a stop-the-world. It uses multiple threads and also freezes all the threads during garbabe collection. It differs from &lt;em&gt;Parallel Scavenge&lt;/em&gt; in that it has enhancements that make it usable with CMS. For example, &lt;em&gt;ParNew&lt;/em&gt; does the synchronization needed so that it can run during the concurrent phases of CMS.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Old Generation Collection&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Serial Old&lt;/strong&gt; is a stop-the-world, mark-sweep-compact collector that uses a single GC thread&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;CMS&lt;/strong&gt; (Concurrent Mark Sweep, CMS GC) is a mostly concurrent, low-pause collector. It uses multiple threads and only freezes the threads while marking the referenced objects in the tenured generation space, and if there is a change in heap memory in parallel while doing the garbage collection. It uses more CPU to improve throughput.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Parallel Old&lt;/strong&gt; is a compacting collector that uses multiple GC threads&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oracle.com/technetwork/tutorials/tutorials-1876574.html&quot;&gt;G1&lt;/a&gt;&lt;/strong&gt; (G1 GC) is the Garbage First collector for large heaps and provides reliable short GC pauses
    &lt;ul&gt;
      &lt;li&gt;Has generations but uses different memory layout&lt;/li&gt;
      &lt;li&gt;Default collector in JDK 9&lt;/li&gt;
      &lt;li&gt;It supposed to replace CMS in the long term and the main differences with CMS are:&lt;/li&gt;
    &lt;/ul&gt;
    &lt;ul&gt;
      &lt;li&gt;It uses regions to simplify the collection and avoid fragmentation issues.&lt;/li&gt;
      &lt;li&gt;G1 offers more predictable garbage collection pauses and allows users to specify desired pause targets.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;figure w-100&quot;&gt;
  &lt;img src=&quot;https://lh3.googleusercontent.com/wZSqu7r16KpwA2-7pbQFzorYharzcuhnLi5R21xcYpzQ2zf0F_D3HOE7aUP_sRo3TNWT6nf3XzZx5JWT0-nTnsLBubzp21BnJfJDno5fj1lzkS12CaJ9a4CKtp4l7XMxlPRPqQ9JFg=w800&quot; class=&quot;figure-img img-fluid rounded&quot; alt=&quot;Generational Garbage Collection Process Diagram&quot; /&gt;
  
    &lt;figcaption class=&quot;figure-caption text-center&quot;&gt;Generational Garbage Collection Process Diagram&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;em&gt;&lt;a href=&quot;https://www.opsian.com/blog/javas-new-zgc-is-very-exciting/&quot;&gt;The Z Garbage Collector&lt;/a&gt;&lt;/em&gt; - ZGC: Is designed to offer very low pause times on large heaps and it does this through the use of coloured pointers and load barriers.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The GC selected by default in your machine can be checked with the following JVM option:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java &lt;span class=&quot;nt&quot;&gt;-XX&lt;/span&gt;:+PrintCommandLineFlags &lt;span class=&quot;nt&quot;&gt;-version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;All options are set or retrieve with &lt;code class=&quot;highlighter-rouge&quot;&gt;-XX&lt;/code&gt;. Options that have true/false values are specified using + for true and - for false. e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:+PrintCommandLineFlags&lt;/code&gt; sets this option to true. To see all you default JVM options you can run &lt;code class=&quot;highlighter-rouge&quot;&gt;XX:+PrintFlagsFinal&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If a parallel GC is selected we can tune a couple of parameters:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Maximum Pause Time Goal&lt;/em&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:MaxGCPauseMillis=&amp;lt;milliseconds&amp;gt;&lt;/code&gt;): The JVM will ajust the heap size and other GC parameters to reduce the pause time during garbage collector stops. This might cause more frequent GC and reduce the application throughput.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Throughput Goal&lt;/em&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:GCTimeRatio=&amp;lt;milliseconds&amp;gt;&lt;/code&gt;): The ratio is &lt;code class=&quot;highlighter-rouge&quot;&gt;1 / (1 + &amp;lt;milliseconds&amp;gt;)&lt;/code&gt;. For instance, if it is set to 19, it will be 1/20th or 5% of the total time for the garbage collection. This ratio affects both the young and old generation time. The JVM might increase the size of the generations, so the application will run for longer without having to execute a garbage collection.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;tuning-heap-memory&quot;&gt;Tuning Heap Memory&lt;/h4&gt;

&lt;p&gt;System performance is greatly influenced by the size of the Java heap available to the JVM.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.oracle.com/cd/E15523_01/web.1111/e13814/jvm_tuning.htm#PERFM161&quot;&gt;Rules&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Heap Size &amp;lt; Avialable Physical RAM.&lt;/li&gt;
  &lt;li&gt;Young Generation Size &amp;lt; Total Heap Size/2&lt;/li&gt;
  &lt;li&gt;It’s recommended to use same values for minimum and maximum heap size to prevent wasting VM resources used to constantly grow and shrink the heap.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Options&lt;/strong&gt;:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th&gt;Option&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Initial java heap size&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Xms&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Maximum Heap Size&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Xmx&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Initial and maximum size of the young generation&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Xmn&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;p&gt;Oracle docummentation advices not to choose a maximum value for the heap unless you know that you need a heap greater than the default maximum heap size. Instead choose a throughput goal that is sufficient for your application.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;metaspace&quot;&gt;Metaspace&lt;/h3&gt;

&lt;p&gt;Metaspace is the memory allocated for metadata. In &lt;em&gt;JDK 8&lt;/em&gt;, the permanent generation was replace with metaspace, and now class metadata is stored in native memory.&lt;/p&gt;

&lt;p&gt;The memory is allocated in the same as C does (Metadata uses space allocated by mmap, not by malloc).The amount of native memory that can be used by &lt;strong&gt;Metaspace&lt;/strong&gt; area is by default unlimited, however you can use the option &lt;code class=&quot;highlighter-rouge&quot;&gt;MaxMetaspaceSize&lt;/code&gt; to set an upper limit. The GC will also run on metaspace when is getting full.&lt;/p&gt;

&lt;h4 id=&quot;java-class-metadata&quot;&gt;Java Class Metadata&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Java Class Metadata&lt;/em&gt; is JVM’s &lt;strong&gt;internal model of everything in the bytecode&lt;/strong&gt;. The &lt;em&gt;JVM&lt;/em&gt; gets all the bytecode, creates the model and throughs away the bytecode (bycode is not used because of complexity reasons).&lt;/p&gt;

&lt;p&gt;It also contains:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Resolution state&lt;/em&gt; (linkage to other classes/interfaces, fields, methods and constants).&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Interpretation state&lt;/em&gt; (quick acces resources for resolved references and basic profile counters)&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Compilation state&lt;/em&gt; (conde entry addresses, linking stubs and sophisticated profile counters).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Why Java Class Metadata?&lt;/strong&gt; It’s needed to model the code base at runtime; for the interpreter and JIT, so they know about the class organization; for reflection; and for the JVM Tool Interface to query or update classes at runtime.&lt;/p&gt;

&lt;h3 id=&quot;stack-memory&quot;&gt;Stack Memory&lt;/h3&gt;

&lt;p&gt;Java Stack memory is used for static memory allocation and during the execution of threads, it stores method specific values that are short-lived and references to other objects in the heap that are getting referred from the method.&lt;/p&gt;

&lt;p&gt;Whenever a method is invoked, a new block is created in the stack memory for the method to hold local primitive values and reference to other objects in the method. As soon as method ends, the block becomes unused and become available for next method.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Access to this memory is in LIFO (last-in-first-out).&lt;/li&gt;
  &lt;li&gt;Size depends on the OS and is relatively small compared to Heap memory.&lt;/li&gt;
  &lt;li&gt;This memory exists as long as the method is running.&lt;/li&gt;
  &lt;li&gt;When it’s full it throws a java.langStackOverFlowException.&lt;/li&gt;
  &lt;li&gt;Access to this memory is faster than heap memory.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;code-cache&quot;&gt;Code Cache&lt;/h3&gt;

&lt;p&gt;Code Cache is the memory area where the JVM stores the compiled code generated by the Just-In-Time (JIT) compiler. Code Cache uses native memory and is managed by the Code Cache Sweeper.&lt;/p&gt;

&lt;h4 id=&quot;code-cache-tuning&quot;&gt;Code Cache Tuning&lt;/h4&gt;

&lt;p&gt;We can use &lt;em&gt;JVM&lt;/em&gt; option to tweak the codecache comsumption by the &lt;em&gt;JIT&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Some common Codecache &lt;strong&gt;options&lt;/strong&gt;:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Option&lt;/th&gt;
      &lt;th&gt;Default&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;InitialCodeCacheSize&lt;/td&gt;
      &lt;td&gt;160K (varies)&lt;/td&gt;
      &lt;td&gt;Initial code cache size (in bytes)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ReservedCodeCacheSize&lt;/td&gt;
      &lt;td&gt;32M/48M&lt;/td&gt;
      &lt;td&gt;Reserved code cache size (in bytes) - maximum code cache size&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CodeCacheExpansionSize&lt;/td&gt;
      &lt;td&gt;32K/64K&lt;/td&gt;
      &lt;td&gt;Code cache expansion size (in bytes)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;UseCodeCacheFlushing&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;Attempt to sweep the codecache before shutting off compiler&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CodeCacheMinimumFreeSpace&lt;/td&gt;
      &lt;td&gt;500K&lt;/td&gt;
      &lt;td&gt;When less than the specified amount of space remains, stop compiling. This space is reserved for code that is not compiled methods, for example, native adapters&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PrintCodeCache&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;Print the code cache memory usage when exiting&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;You can &lt;strong&gt;benefit&lt;/strong&gt; from codecache restriction when a lot of code is stored during startup, but very little of this compiled code is needed afterward. By doing this codecache flushing will be likely triggered and make room for the code needed during runtime.&lt;/p&gt;</content><author><name>Sergio Martin Rubio</name><email>me@sergiomartinrubio.com</email></author><category term="Java" /><summary type="html"></summary></entry><entry><title type="html">Moving Beyond REST with GraphQL</title><link href="http://localhost:4000/articles/moving-beyond-rest-with-graphql" rel="alternate" type="text/html" title="Moving Beyond REST with GraphQL" /><published>2019-07-11T00:00:00+01:00</published><updated>2019-07-11T00:00:00+01:00</updated><id>http://localhost:4000/articles/moving-beyond-rest-with-graphql</id><content type="html" xml:base="http://localhost:4000/articles/moving-beyond-rest-with-graphql">&lt;div class=&quot;list-group my-3&quot;&gt;

  
    &lt;a class=&quot;list-group-item list-group-item-action active disabled text-white&quot;&gt;Table of Contents&lt;/a&gt;
  

  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#how-it-works&quot;&gt;
How it works&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#operations&quot;&gt;
Operations&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#query&quot;&gt;
Query&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#mutation&quot;&gt;
Mutation&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#subscription&quot;&gt;
Subscription&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#schema&quot;&gt;
Schema&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#how-to-create-a-graphql-spring-boot-server&quot;&gt;
How to create a GraphQL Spring Boot Server?&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#define-graphql-schema&quot;&gt;
Define GraphQL Schema&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#build-spring-boot-application&quot;&gt;
Build Spring Boot application&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#graphiql-a-graphql-client&quot;&gt;
GraphiQL, a GraphQL client&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#highlights-and-challenges&quot;&gt;
Highlights and Challenges&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#conclusion&quot;&gt;
Conclusion&lt;/a&gt;
    
  

&lt;/div&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://graphql.org/&quot;&gt;&lt;strong&gt;GraphQL&lt;/strong&gt;&lt;/a&gt; is a &lt;strong&gt;query language&lt;/strong&gt; that matches up with &lt;strong&gt;Domain Driven Design&lt;/strong&gt;, so you can use your existing entities or models in your GraphQL design.&lt;/p&gt;

&lt;p&gt;This query language was created by &lt;strong&gt;Facebook&lt;/strong&gt; and &lt;strong&gt;open sourced&lt;/strong&gt; later &lt;strong&gt;in 2015&lt;/strong&gt;, and since then it has been &lt;strong&gt;maitained by the community&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;To start using &lt;strong&gt;GraphQL&lt;/strong&gt; you will have to learn a &lt;strong&gt;new specification&lt;/strong&gt;, because it is not a simple implementation, however it is pretty &lt;strong&gt;simple&lt;/strong&gt; and if you are familiar with other query languages it will take you a few hours to understand how it works. Also the &lt;a href=&quot;https://graphql.github.io/graphql-spec/June2018/#&quot;&gt;GraphQL spec&lt;/a&gt; is very well documented and shows you how to use operations like queries or mutations, define schemas or what good practicies you should follow.&lt;/p&gt;

&lt;h3 id=&quot;how-it-works&quot;&gt;How it works&lt;/h3&gt;

&lt;p&gt;This API Query Language allows you to retrive data from a service in one go. How can I do that? A single endpoint is exposed by GraphQL, and given a schema which contains your models and operations, you can make HTTP requests to &lt;code class=&quot;highlighter-rouge&quot;&gt;/graphql&lt;/code&gt; by providing operation names, a payload and variables.&lt;/p&gt;

&lt;p&gt;GraphQL supports both, GET and POST HTTP methods. In case of GET, we have to use a query parameter (&lt;code class=&quot;highlighter-rouge&quot;&gt;?query={operationName{field}}&lt;/code&gt;). On the other hand, we could do a standard POST request with a JSON payload.&lt;/p&gt;

&lt;p&gt;e.g.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;query&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;operationName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Remember that URLs can only sent over the internet using the ASCII character-set.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;operations&quot;&gt;Operations&lt;/h3&gt;
&lt;h4 id=&quot;query&quot;&gt;Query&lt;/h4&gt;

&lt;p&gt;Queries are used to retrieved data, and you should use them to perform read operations in your service. Here is an example:&lt;/p&gt;

&lt;div class=&quot;language-graphql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findHotelById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;room&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;em&gt;findHotelById&lt;/em&gt; is the operation of the query, and everything else inside the operation is called &lt;em&gt;payload&lt;/em&gt;. We can use arguments like the one in the previos example (id: 2), that will return the Hotel with id 2.&lt;/p&gt;

&lt;p&gt;Queries also support &lt;em&gt;dynamic&lt;/em&gt; arguments, and provides a way to pass them as JSON in the operation. We will use them like this:&lt;/p&gt;
&lt;div class=&quot;language-graphql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MyQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$hotelId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findHotelById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$hotelId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;room&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;occupants&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hotelId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;You could use the shorthand syntax and omit both the &lt;em&gt;query&lt;/em&gt; keyword and the &lt;em&gt;query name&lt;/em&gt;, but it is a good practice to use these to make our code more readable, and they can be useful for debugging or identify different GraphQL requests.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In case we have to create a complex query we could use &lt;em&gt;Fragments&lt;/em&gt;. Fragments are reusable blocks that contain set of fields. For example:&lt;/p&gt;
&lt;div class=&quot;language-graphql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MyQuery&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstHotel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findHotelById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compareHotels&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secondHotel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findHotelById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compareHotels&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fragment&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compareHotels&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Hotel&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;room&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;occupants&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;We have to use three dots followed by the fragment name to call a frament.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;mutation&quot;&gt;Mutation&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Mutations&lt;/strong&gt; are used to alter data and they should trigger insertions, updates or deletions in your database. We can create a mutation by replacing the &lt;em&gt;query&lt;/em&gt; with the &lt;em&gt;mutation&lt;/em&gt; keyword. This is an example:&lt;/p&gt;

&lt;div class=&quot;language-graphql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;mutation&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newHotel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test 1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test 1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Just like in queries, if a mutation returns an object type, you can ask for nested fields. In the previous example the mutation creates a new &lt;em&gt;Hotel&lt;/em&gt; and returns the &lt;em&gt;id&lt;/em&gt; for the created &lt;em&gt;hotel&lt;/em&gt;, which was in this case autogenerated.&lt;/p&gt;

&lt;p&gt;&lt;mark class=&quot;px-2&quot;&gt;Apart from sintax, queries and mutations differ from each other on one more thing, query fields are executed in parallel, whereas mutations run sequencially.&lt;/mark&gt;&lt;/p&gt;

&lt;h4 id=&quot;subscription&quot;&gt;Subscription&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;GraphQL&lt;/em&gt; &lt;em&gt;subscriptions&lt;/em&gt; are a way to &lt;strong&gt;stream data&lt;/strong&gt; from the server to the clients that are listening. In the same way as queries, subscriptions allow you to ask for a set of fields, but instead of making a stateless HTTP request, a &lt;strong&gt;websocket conexion&lt;/strong&gt; is used to have a stream of data coming from the server, so that everytime there is a change on the server, results are sent to the client, or in other words, when a client runs a &lt;em&gt;mutation&lt;/em&gt; the subscription is triggered.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Executing a &lt;em&gt;subscription&lt;/em&gt; creates a persistent function on the server that maps an underlying Source Stream to a returned Response Stream.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/subscriptions&lt;/code&gt; is by default the &lt;strong&gt;WebSocket&lt;/strong&gt; subscriptions endpoint. Here’s an example of &lt;em&gt;Javascript&lt;/em&gt; client using subscriptions:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;subscribeToHotels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;WebSocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ws://localhost:8080/subscriptions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onopen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`
              subscription MySubscription {
                getNewHotel {
                  name
                  address
                  creationDate
                }
              }
        `&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;graphqlRequest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;graphqlRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onmessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// handle response&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;schema&quot;&gt;Schema&lt;/h3&gt;

&lt;p&gt;Schema files are text files with &lt;code class=&quot;highlighter-rouge&quot;&gt;.grapqhl&lt;/code&gt; extension. Operations and models are define there, and in order to do that GraphQL provides a schema language which inclues scalar types, markers and other keywords to build complex schemas&lt;/p&gt;

&lt;p&gt;Built-in scalar types are:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;GraphQL Type&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Serialized as&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Int&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Signed 32‐bit integer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Float&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Signed double-precision floating-point value&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;String&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;UTF‐8 character sequence&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Boolean&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;true or false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;ID&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;String&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Type Markers:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;GraphQL Marker&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Equivalent&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;type&amp;gt;!&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Not Null&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[&amp;lt;type&amp;gt;]&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;List&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[&amp;lt;type&amp;gt;!]&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;List of Not Null Elements&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[&amp;lt;type&amp;gt;]!&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Not Null list&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[&amp;lt;type&amp;gt;!]!&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Not Null list of Not Null Elements&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Here you have an example:&lt;/p&gt;

&lt;div class=&quot;language-graphql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Hotel&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;## Hotel name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;## Hotel address&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;## Date of the hotel registry creation&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;creationDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;## List of rooms for a particular hotel&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;room&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Room&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;We call also add comments to document your schema, and to do so, you just need to add them before each field, type or argument.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Queries&lt;/em&gt;, &lt;em&gt;mutations&lt;/em&gt; and &lt;em&gt;subscriptions&lt;/em&gt; can be created as follows:&lt;/p&gt;

&lt;div class=&quot;language-graphql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;## The Root Query for the application&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;## Retrieves all hotels&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findAllHotels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Hotel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;## Retrieves a Hotel given an ID (eg: '1, 4, 12')&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findHotelById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Hotel&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;## Number of Hotel available&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;countHotels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;## Finds all payment methods&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findAllPayments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Payment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You just need to define the name of the operation with optional parameters followed by the returned type.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Query&lt;/em&gt;, &lt;em&gt;Mutation&lt;/em&gt; and &lt;em&gt;Subscription&lt;/em&gt; keywords are used as the root of each type of operation for the application. But it is easy to add additional operations by using the &lt;code class=&quot;highlighter-rouge&quot;&gt;extend&lt;/code&gt; keyword. e.g.&lt;/p&gt;

&lt;div class=&quot;language-graphql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;Custom types&lt;/em&gt; are also extendible to avoid large list of fields.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are also other more advance elements like &lt;code class=&quot;highlighter-rouge&quot;&gt;interface&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;union&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;enum&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;scalar&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;how-to-create-a-graphql-spring-boot-server&quot;&gt;How to create a GraphQL Spring Boot Server?&lt;/h3&gt;

&lt;p&gt;We need to:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Define GraphQL Schema.&lt;/li&gt;
  &lt;li&gt;Decide how the data for a query is fetched.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;define-graphql-schema&quot;&gt;Define GraphQL Schema&lt;/h4&gt;

&lt;p&gt;Here there is an example:&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/9e6069efb65747a6ef9e1993dfb1733c.js?file=schema.graphql&quot;&gt; &lt;/script&gt;

&lt;p&gt;There is a &lt;a href=&quot;https://github.com/graphql-java-kickstart/graphql-java-tools#why-graphql-java-tools&quot;&gt;Java GraphQL tool library&lt;/a&gt; that parses your schema to Java and configure classes for creating a GraphQLSchema.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;By default GraphQL tools uses the location pattern &lt;code class=&quot;highlighter-rouge&quot;&gt;**/*.graphqls&lt;/code&gt; to scan for GraphQL schemas on the classpath.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.graphql-java&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;graphql-java-tools&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;5.2.4&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;build-spring-boot-application&quot;&gt;Build Spring Boot application&lt;/h4&gt;

&lt;p&gt;These two libraries are required to start using GraphQL with Spring, and basically there are setting up the servlet&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;kotlin.version&amp;gt;&lt;/span&gt;1.3.10&lt;span class=&quot;nt&quot;&gt;&amp;lt;/kotlin.version&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
    ...
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.graphql-java&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;graphql-java&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;11.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.graphql-java&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;graphql-spring-boot-starter&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;5.0.2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The first one is the GraphQL Java implementation, while the second one makes available the servlet at &lt;code class=&quot;highlighter-rouge&quot;&gt;/graphql&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;graphl-java-tools requires kotlin.version Kotlin 1.3.10, because Spring Boot Starter parent currently overrides it with a 1.2.* version of Kotlin. Spring Boot team has indicated the Kotlin version will be upgraded to 1.3 in Spring Boot 2.2.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For this example we will use a MongoDB repository, since we want to use Reactive Programming to get updates on real time with GraphQL Subscription.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HotelRepository&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ReactiveCrudRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Hotel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Tailable&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Flux&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Hotel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findWithTailableCursorBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;@Tailable is required to query capped collections in MongoDB. Capped collections will keep the curson open even after reaching the end of the collection.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The next step is to create resolvers for each object defined in your schema. &lt;em&gt;Query&lt;/em&gt;, &lt;em&gt;Mutation&lt;/em&gt; and &lt;em&gt;Subscription&lt;/em&gt; are root GraphQL objects, and you need to implement GraphQLQueryResolver, GraphQLMutationResolver and GraphQLSubscriptionResolver respectively so that &lt;code class=&quot;highlighter-rouge&quot;&gt;graphql-java-tools&lt;/code&gt; will be able to map the GraphQL operations with the methods created in the resolvers. Here there is an example:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Component&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@RequiredArgsConstructor&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Query&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GraphQLQueryResolver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HotelRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hotelRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PaymentRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;paymentRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Iterable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Hotel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findAllHotels&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hotelRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toIterable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Optional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Hotel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findHotelById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hotelRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;blockOptional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Optional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;countHotels&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hotelRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;blockOptional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Iterable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Payment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findAllPayments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;paymentRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toIterable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;mark class=&quot;px-2&quot;&gt;Method name and signature have to match with GraphQL the corresponding operation definition.&lt;/mark&gt;&lt;/p&gt;

&lt;p&gt;Additionally, you might need to create resolvers for nested fields. e.g.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Component&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@RequiredArgsConstructor&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HotelResolver&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GraphQLResolver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Hotel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RoomRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;roomRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Iterable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Room&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getRoom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Hotel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hotel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;roomRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAllByHotelId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hotel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toIterable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the previous example, when we retrieve hotels we might ask for rooms as well, therefore a method to retrieve rooms by hotel ID needs to be provided.&lt;/p&gt;

&lt;p class=&quot;text-center&quot;&gt;
&lt;a class=&quot;m-1 btn btn-outline-primary btn-2 &quot; href=&quot;https://github.com/smartinrub/spring-reactive-mongo-graphql&quot;&gt;
  Source Code
&lt;/a&gt;
&lt;/p&gt;

&lt;h4 id=&quot;graphiql-a-graphql-client&quot;&gt;GraphiQL, a GraphQL client&lt;/h4&gt;

&lt;p&gt;GraphiQL is a very useful tool to explore your GraphQL schema and make requests. The most simple way to start using Graphiql is to added to your &lt;code class=&quot;highlighter-rouge&quot;&gt;pom.xml&lt;/code&gt; file as a dependency.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.graphql-java-kickstart&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;graphiql-spring-boot-starter&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;5.7.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By default you can hit it at &lt;code class=&quot;highlighter-rouge&quot;&gt;/graphiql&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;highlights-and-challenges&quot;&gt;Highlights and Challenges&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The main benefit of using GraphQL is that you get what you ask for in a single request, whereas with REST we tend to do “overfetching” or “underfetching”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;GraphQL can also be simpler and faster, however you may face unpredictable performance when multiple fields are combined.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;One of the challenges is versioning. You will have to deprecate fields and will not be able to know if a field has changed over time.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Another point against GraphQL is caching. In GraphQL, you cannot use URLs as cache identifiers, so you need to create unique keys and implement caching in your application.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;There is also an extra overhead, since the server needs to do more processing to parse the query and verify parameters.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Lastly, in case of a simple API the extra complexity added by GraphQL is not worth.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;GraphQL is similar to an API gateway or proxy server that sits in front of your downstream services or data sources, and just like HTTP we can use verbs to get exactly what we ask for. It is also an alternative to REST, SOAP or gRPC, but this does not mean you have to through away your current archicture, for instance you could have GraphQL on top of your REST services.&lt;/p&gt;

&lt;p&gt;This technology is becoming more mature and is available for multiple languages, including JavaScript, Python, Ruby, C#, Go, Scala or Java, and companies like &lt;em&gt;Pivotal&lt;/em&gt; are heavily supporting &lt;em&gt;GraphQL&lt;/em&gt;. In fact it was one of the topics presented in &lt;a href=&quot;https://2019.springio.net/sessions/moving-beyond-rest-graphql-and-java-spring&quot;&gt;Spring IO 2019&lt;/a&gt;.&lt;/p&gt;</content><author><name>Sergio Martin Rubio</name><email>me@sergiomartinrubio.com</email></author><category term="API Integration" /><category term="GraphQL" /><category term="Spring" /><summary type="html"></summary></entry><entry><title type="html">Java Socket IO and NIO</title><link href="http://localhost:4000/articles/java-socket-io-and-nio" rel="alternate" type="text/html" title="Java Socket IO and NIO" /><published>2019-07-01T00:00:00+01:00</published><updated>2019-07-01T00:00:00+01:00</updated><id>http://localhost:4000/articles/java-socket-io-and-nio</id><content type="html" xml:base="http://localhost:4000/articles/java-socket-io-and-nio">&lt;div class=&quot;list-group my-3&quot;&gt;

  
    &lt;a class=&quot;list-group-item list-group-item-action active disabled text-white&quot;&gt;Table of Contents&lt;/a&gt;
  

  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#java-blocking-io&quot;&gt;
Java Blocking IO&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#java-nio&quot;&gt;
Java NIO&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#java-io-vs-nio&quot;&gt;
Java IO vs NIO&lt;/a&gt;
    
  

&lt;/div&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;Sockets use &lt;em&gt;TCP/IP&lt;/em&gt; transport protocol and are the last piece of a network communication between two hosts. You do not usually have to deal with them, since there are protocols built on top of them like &lt;em&gt;HTTP&lt;/em&gt; or &lt;em&gt;FTP&lt;/em&gt;, however it is important to know how they work.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;TCP&lt;/em&gt;: It is a reliable data transfer protocol that ensures that the data sent is complete and correct and requires to establish a connection.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Java offers a blocking and non blocking alternative to create sockets, and depending on your requirements you might consider the one or the other.&lt;/p&gt;

&lt;h3 id=&quot;java-blocking-io&quot;&gt;Java Blocking IO&lt;/h3&gt;

&lt;p&gt;The Java blocking IO API is included in &lt;strong&gt;JDK&lt;/strong&gt; under the package &lt;code class=&quot;highlighter-rouge&quot;&gt;java.net&lt;/code&gt; and is generally the simplest to use.&lt;/p&gt;

&lt;p&gt;This API is based on flows of byte streams and character streams that can be read or written. There is not an index that you can use to move forth and back, like in an array, it is simply a continuous flow of data.&lt;/p&gt;

&lt;figure class=&quot;figure w-100&quot;&gt;
  &lt;img src=&quot;https://lh3.googleusercontent.com/B5e8q-Kn1kzI_apnfLbX8n2abY-uJzTzaFevpdr7ewQBarkSDut0zdpDQeqVUo6cPAqTieIa9S8U0GVgB7DMPHqPU3n386ZIM5g_KzZktCj0iCTn7tsUZxubg4ESaEIwNShIPoXiuw=w600&quot; class=&quot;figure-img img-fluid rounded&quot; alt=&quot;Java Blocking IO&quot; /&gt;
  
    &lt;figcaption class=&quot;figure-caption text-center&quot;&gt;Java Blocking IO&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Every time a client request a connection to the server, it will block a thread. Therefore, we have to create a pool of threads large enough if we expect to have many simultaneous connections.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ServerSocket&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serverSocket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServerSocket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PORT_NUMBER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Socket&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serverSocket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;BufferedReader&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BufferedReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;InputStreamReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getOutputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;A &lt;code class=&quot;highlighter-rouge&quot;&gt;ServerSocket&lt;/code&gt; is created with a given port to listen on.&lt;/li&gt;
  &lt;li&gt;The server will block when &lt;code class=&quot;highlighter-rouge&quot;&gt;accept()&lt;/code&gt; is invoked and starts listening for clients connections.&lt;/li&gt;
  &lt;li&gt;If a client requests a connection a Socket is returned by &lt;code class=&quot;highlighter-rouge&quot;&gt;accept()&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Now we can read from the client (&lt;code class=&quot;highlighter-rouge&quot;&gt;InputStream&lt;/code&gt;) and send data back to the client (&lt;code class=&quot;highlighter-rouge&quot;&gt;OutputStream&lt;/code&gt;).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If we want to allow multiple connections, we have to create a &lt;strong&gt;Thread Pool&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ExecutorService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threadPool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Executors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newFixedThreadPool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

 &lt;span class=&quot;n&quot;&gt;threadPool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;c1&quot;&gt;// SOCKET CREATION&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you can see, this API has some limitations. We won’t be able to accept more connections than threads available in our machine. Therefore, if you are expecting to have many connections, you need an alternative.&lt;/p&gt;

&lt;h3 id=&quot;java-nio&quot;&gt;Java NIO&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;java.nio&lt;/strong&gt; is a non blocking API for socket connections which means you are not tight to the number of threads available. With this library one thread can handle multiple connections at once.&lt;/p&gt;

&lt;figure class=&quot;figure w-100&quot;&gt;
  &lt;img src=&quot;https://lh3.googleusercontent.com/UPsm3Jc2Gicv6fHuIqnSjOrwvXhO73u5bDYcWMU2WtuCKM9Q6ePPEGoJPKxKA0dl9DQwrkr5B3YNcQ505xgQUtwZB-jKnSx3uetK0bkRK01g9S1lsWWAPZ-hSfVfeP0ZpvL7ap3RrA=w600&quot; class=&quot;figure-img img-fluid rounded&quot; alt=&quot;Java NIO&quot; /&gt;
  
    &lt;figcaption class=&quot;figure-caption text-center&quot;&gt;Java NIO&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Main elements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Channel&lt;/strong&gt;: channels are a combination of input and output streams, so they allow you to read and write, and they use buffers to do this operations.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Buffer&lt;/strong&gt;: it is a block of memory used to read from a &lt;code class=&quot;highlighter-rouge&quot;&gt;Channel&lt;/code&gt; and write into it. When you want to read data from a &lt;code class=&quot;highlighter-rouge&quot;&gt;Buffer&lt;/code&gt; you need to invoke&lt;code class=&quot;highlighter-rouge&quot;&gt;flip()&lt;/code&gt;, so that it will set &lt;code class=&quot;highlighter-rouge&quot;&gt;pos&lt;/code&gt; to 0.
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// pos = n &amp;amp; lim = 1024&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// set buffer in read mode - pos = 0 &amp;amp; lim = n&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasRemaining&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()){&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// read 1 byte at a time&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// make buffer ready for writing - pos = 0 &amp;amp; lim = 1024&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// set to -1&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;ol&gt;
      &lt;li&gt;On line 1, pos will be equals to the number of bytes written into the &lt;code class=&quot;highlighter-rouge&quot;&gt;Buffer&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;On line 3, &lt;code class=&quot;highlighter-rouge&quot;&gt;flip()&lt;/code&gt; is called to set position to 0 and limit to the number of bytes previously written.&lt;/li&gt;
      &lt;li&gt;On line 5, it reads from &lt;code class=&quot;highlighter-rouge&quot;&gt;Buffer&lt;/code&gt; one byte at a time up to the limit.&lt;/li&gt;
      &lt;li&gt;On line 7, finally we clear the &lt;code class=&quot;highlighter-rouge&quot;&gt;Buffer&lt;/code&gt;.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Selector&lt;/strong&gt;: A &lt;code class=&quot;highlighter-rouge&quot;&gt;Selector&lt;/code&gt; can register multiple Channels and will check which ones are ready for accepting new connections. Similar to &lt;code class=&quot;highlighter-rouge&quot;&gt;accept()&lt;/code&gt; method of blocking IO, when &lt;code class=&quot;highlighter-rouge&quot;&gt;select()&lt;/code&gt; is invoked it will block the application until a &lt;code class=&quot;highlighter-rouge&quot;&gt;Channel&lt;/code&gt; is ready to do an operation. Because a &lt;code class=&quot;highlighter-rouge&quot;&gt;Selector&lt;/code&gt; can register many channels, only one thread is required to handler multiple connections.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Selection Key&lt;/strong&gt;: It contains properties for a particular &lt;strong&gt;Channel&lt;/strong&gt; (interest set, ready set, selector/channel and an optional attached object). Selection keys are mainly use to know the current interest of the channel (&lt;code class=&quot;highlighter-rouge&quot;&gt;isAcceptable()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;isReadable()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;isWritable()&lt;/code&gt;), get the channel and do operations with that channel.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;example&quot;&gt;Example&lt;/h4&gt;

&lt;p&gt;We will use an &lt;strong&gt;Echo Socket Channel&lt;/strong&gt; server to show how NIO works.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serverSocketChannel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServerSocketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;serverSocketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;configureBlocking&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;serverSocketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InetSocketAddress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8080&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Selector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;serverSocketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SelectionKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OP_ACCEPT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;selectedKeys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasNext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selectionKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SelectionKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selectionKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isAcceptable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;createChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serverSocketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selectionKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selectionKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isReadable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;doRead&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selectionKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selectionKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isWritable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;doWrite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selectionKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ol&gt;
  &lt;li&gt;From lines 1 to 3 a &lt;code class=&quot;highlighter-rouge&quot;&gt;ServerSocketChannel&lt;/code&gt; is created, and you have to set it to non-blocking mode explicitly. The socket is also configure to listen on &lt;em&gt;port 8080&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;On line 5 and 6, a &lt;code class=&quot;highlighter-rouge&quot;&gt;Selector&lt;/code&gt; is created and &lt;code class=&quot;highlighter-rouge&quot;&gt;ServerSocketChannel&lt;/code&gt; is registered on the Selector with a &lt;code class=&quot;highlighter-rouge&quot;&gt;SelectionKey&lt;/code&gt; pointing to ACCEPT operations.&lt;/li&gt;
  &lt;li&gt;To keep the application listening all the time the blocking method &lt;code class=&quot;highlighter-rouge&quot;&gt;select()&lt;/code&gt; is inside an infinite while loop, and &lt;code class=&quot;highlighter-rouge&quot;&gt;select()&lt;/code&gt; will return when at least one channel is selected &lt;code class=&quot;highlighter-rouge&quot;&gt;wakeup()&lt;/code&gt; is invoked or the thread is interrupted.&lt;/li&gt;
  &lt;li&gt;Then on line 10 a set of keys are returned from the &lt;code class=&quot;highlighter-rouge&quot;&gt;Selector&lt;/code&gt; and we will iterate through them in order to execute the ready channels.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServerSocketChannel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serverSocketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SelectionKey&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selectionKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socketChannel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serverSocketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LOGGER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Accepted connection from &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;socketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;configureBlocking&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;socketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ByteBuffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Welcome: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRemoteAddress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;\nThe thread assigned to you is: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentThread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dataMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LinkedList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// store socket connection&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LOGGER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Total clients connected: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;socketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selectionKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SelectionKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OP_READ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// selector pointing to READ operation&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Every time a new connection is created &lt;code class=&quot;highlighter-rouge&quot;&gt;isAcceptable()&lt;/code&gt; will be true and a new &lt;code class=&quot;highlighter-rouge&quot;&gt;Channel&lt;/code&gt; will be registered into the &lt;code class=&quot;highlighter-rouge&quot;&gt;Selector&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;To keep track of the data of each channel, it is put in a &lt;code class=&quot;highlighter-rouge&quot;&gt;Map&lt;/code&gt; with the socket channel as the key and a list of ByteBuffers.&lt;/li&gt;
  &lt;li&gt;Then the selector will point to &lt;em&gt;READ&lt;/em&gt; operation.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doRead&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SelectionKey&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selectionKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LOGGER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Reading...&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socketChannel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SocketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selectionKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;channel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;byteBuffer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ByteBuffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;allocate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// pos=0 &amp;amp; lim=1024&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byteBuffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// pos=numberOfBytes &amp;amp; lim=1024&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// if connection is closed by the client&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;doClose&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;byteBuffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// put buffer in read mode by setting pos=0 and lim=numberOfBytes&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dataMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byteBuffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// find socket channel and add new byteBuffer queue&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;selectionKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;interestOps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SelectionKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OP_WRITE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// set mode to WRITE to send data&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;In the read block the channel will be retrieved and the incoming data will be written into a &lt;code class=&quot;highlighter-rouge&quot;&gt;ByteBuffer&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;On line 6 we check if the connection has been closed.&lt;/li&gt;
  &lt;li&gt;On line 9 and 10, the buffer is set to read mode with &lt;code class=&quot;highlighter-rouge&quot;&gt;flip()&lt;/code&gt; and added to the Map.&lt;/li&gt;
  &lt;li&gt;Then, &lt;code class=&quot;highlighter-rouge&quot;&gt;interestOps()&lt;/code&gt; is invoked to point to &lt;em&gt;WRITE&lt;/em&gt; operation.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doWrite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SelectionKey&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selectionKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LOGGER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Writing...&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socketChannel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SocketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selectionKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;channel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pendingData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// find channel&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pendingData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// start sending to client from queue&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pendingData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;poll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;socketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;selectionKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;interestOps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SelectionKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OP_READ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// change the key to READ&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Once again, the channel is retrieved in order to write the data saved in the &lt;code class=&quot;highlighter-rouge&quot;&gt;Map&lt;/code&gt; into it.&lt;/li&gt;
  &lt;li&gt;Then, we set the &lt;code class=&quot;highlighter-rouge&quot;&gt;Selector&lt;/code&gt; to &lt;em&gt;READ&lt;/em&gt; operations.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doClose&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SocketChannel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dataMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remoteSocketAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRemoteSocketAddress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LOGGER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Connection closed by client: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remoteSocketAddress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;socketChannel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// closes channel and cancels selection key&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ol&gt;
  &lt;li&gt;In case the connection is closed, the channel is removed from the &lt;code class=&quot;highlighter-rouge&quot;&gt;Map&lt;/code&gt; and we close the channel.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;java-io-vs-nio&quot;&gt;Java IO vs NIO&lt;/h3&gt;

&lt;p&gt;Choosing between IO and NIO will depend on the use case. For fewer connections and a simple solution, IO might be better fit for you.
Whereas, if you want something more efficient which can handle thousands of connections simultaneously NIO is probably a better choice, but bear in mind that it will introduce much code complexity, however, there frameworks like &lt;a href=&quot;https://netty.io/&quot;&gt;Netty&lt;/a&gt; or &lt;a href=&quot;https://mina.apache.org/&quot;&gt;Apache MINA&lt;/a&gt; that are built on top of NIO and hide the programming complexity.&lt;/p&gt;

&lt;p class=&quot;text-center&quot;&gt;
&lt;a class=&quot;m-1 btn btn-outline-primary btn-2 &quot; href=&quot;https://github.com/smartinrub/java-sockets&quot;&gt;
  Source Code
&lt;/a&gt;
&lt;/p&gt;</content><author><name>Sergio Martin Rubio</name><email>me@sergiomartinrubio.com</email></author><category term="Java" /><summary type="html"></summary></entry><entry><title type="html">Verify Producer-Consumer Communication between Microservices with Spring Cloud Contract</title><link href="http://localhost:4000/articles/verify-producer-consumer-communication-between-microservices-with-spring-cloud-contract" rel="alternate" type="text/html" title="Verify Producer-Consumer Communication between Microservices with Spring Cloud Contract" /><published>2019-06-01T00:00:00+01:00</published><updated>2019-06-01T00:00:00+01:00</updated><id>http://localhost:4000/articles/verify-producer-consumer-communication-between-microservices-with-spring-cloud-contract</id><content type="html" xml:base="http://localhost:4000/articles/verify-producer-consumer-communication-between-microservices-with-spring-cloud-contract">&lt;div class=&quot;list-group my-3&quot;&gt;

  
    &lt;a class=&quot;list-group-item list-group-item-action active disabled text-white&quot;&gt;Table of Contents&lt;/a&gt;
  

  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#what-to-test&quot;&gt;
What to test&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#tools&quot;&gt;
Tools&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#spring-cloud-contract&quot;&gt;
Spring Cloud Contract&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#producer&quot;&gt;
Producer&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#consumer&quot;&gt;
Consumer&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#conclusion&quot;&gt;
Conclusion&lt;/a&gt;
    
  

&lt;/div&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;Before &lt;strong&gt;microservices&lt;/strong&gt; became popular, we did not have to worry about making sure that different components of your application were using the same POJO class, and any change in a particular entity will affect all its users straight away.&lt;/p&gt;

&lt;p&gt;In a microservices architecture, some &lt;strong&gt;testing&lt;/strong&gt; aspects have changed, and now our applications &lt;strong&gt;require a different strategy&lt;/strong&gt;. &lt;strong&gt;Contract Testing&lt;/strong&gt; is one of the solutions which consists of writing tests to ensure that the contracts of our microservices are satisfied and work as expected.&lt;/p&gt;

&lt;p&gt;When we talk about Contract Tests, there are &lt;strong&gt;two roles&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Producer&lt;/strong&gt;: it is the application providing a service.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Consumer&lt;/strong&gt;: it is entity consuming the producer API.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;what-to-test&quot;&gt;What to test&lt;/h3&gt;

&lt;p&gt;Contracts should define API specifications offered by microservices, so there is no need for us to test service availability, integrations of layers or load tolerance.&lt;/p&gt;

&lt;p&gt;Our contract should contain elements like HTTP status (e.g. 200, 400…), headers (content-type, cookies…) or response body, for a particular request (method type + paht + …).&lt;/p&gt;

&lt;h3 id=&quot;tools&quot;&gt;Tools&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://spring.io/projects/spring-cloud-contract&quot;&gt;Spring Cloud Contract&lt;/a&gt;&lt;/strong&gt; provides a simple way to test contracts by implementing the &lt;a href=&quot;https://martinfowler.com/articles/consumerDrivenContracts.html&quot;&gt;Consumer-Driven Contracts&lt;/a&gt; pattern. In this tecnique, consumers need to satisfy producers expectations, therefore providers are responsible for defining these contracts and share them with its consumers.&lt;/p&gt;

&lt;h3 id=&quot;spring-cloud-contract&quot;&gt;Spring Cloud Contract&lt;/h3&gt;

&lt;h4 id=&quot;producer&quot;&gt;Producer&lt;/h4&gt;

&lt;p&gt;We need to add this dependecy to the producer POM file:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.cloud&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-cloud-starter-contract-verifier&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${contract.version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Additionally, a plugin in the producer is required to generate tests and stubs for you.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.cloud&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-cloud-contract-maven-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${contract.version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;extensions&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/extensions&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;baseClassForTests&amp;gt;&lt;/span&gt;com.sergiomartinrubio.reviewservice.BaseClass&lt;span class=&quot;nt&quot;&gt;&amp;lt;/baseClassForTests&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;testMode&amp;gt;&lt;/span&gt;EXPLICIT&lt;span class=&quot;nt&quot;&gt;&amp;lt;/testMode&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;A base class might need to be created to mock responses or set the context, and this class needs to be set in &lt;em&gt;baseClassForTests&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now we can start defining the contract. Add contracts written in Groovy or YAML to &lt;em&gt;/src/test/resources/contracts/&lt;/em&gt; package. For example:&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;contracts&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.cloud.contract.spec.Contract&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Contract&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;should return all Reviews&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/reviews&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;contentType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;applicationJsonUtf8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&quot;
            [
                {&quot;id&quot;:&quot;1&quot;, &quot;author&quot;:&quot;Sergio&quot;, &quot;message&quot;:&quot;content&quot;}
            ]
        &quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Base class:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@SpringBootTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webEnvironment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SpringBootTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;WebEnvironment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RANDOM_PORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;server.port=0&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@RunWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SpringRunner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Import&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ProducerRestConfiguration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BaseClass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@LocalServerPort&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@MockBean&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ReviewRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reviewRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Before&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;RestAssured&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;baseURI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;http://localhost:&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reviewRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thenReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Flux&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;just&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Review&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Sergio&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once the contract and base class are defined, we can run Maven to generate tests and stubs.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mvn clean &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tests will be generated in &lt;em&gt;/target/generated-test-sources/contracts/&lt;/em&gt;. For the given example the output will be:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ContractVerifierTest&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseClass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;validate_shouldReturnAllReviews&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// given:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;RequestSpecification&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;given&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;// when:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;given&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
					&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/reviews&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;// then:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;statusCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;application/json;charset=UTF-8.*&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// and:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;DocumentContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parsedJson&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBody&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;asString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;assertThatJson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parsedJson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;['message']&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;assertThatJson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parsedJson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;['author']&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Sergio&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;assertThatJson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parsedJson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;['id']&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The stub will be located under stubs/mappings:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ba196f42-7f5f-47b3-a1ce-863fe8b96423&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;request&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/reviews&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;method&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;response&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[{&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Sergio&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;}]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;headers&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;application/json;charset=UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;transformers&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;response-template&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;uuid&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ba196f42-7f5f-47b3-a1ce-863fe8b96423&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The Maven Plugin will also create a jar with stubs to be uploaded to a central repository (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;/target/review-service-0.0.1-SNAPSHOT-stubs.jar&lt;/code&gt;), so you will be able to run it during the integration test phase.&lt;/p&gt;

&lt;h4 id=&quot;consumer&quot;&gt;Consumer&lt;/h4&gt;

&lt;p&gt;The consumer will use a stub runner that allows you to automatically download stubs generated by the producer (or pick those from the classpath), start WireMock servers and feed them with stub definitions.&lt;/p&gt;

&lt;p&gt;Consumer dependency:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.cloud&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-cloud-starter-contract-stub-runner&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Consumer test suite:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@RunWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SpringRunner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@AutoConfigureStubRunner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ids&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;com.sergiomartinrubio:review-service:+:8080&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stubsMode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StubRunnerProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;StubsMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LOCAL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Import&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReviewConsumerApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ReviewClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ReviewWireMockTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ReviewClient&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reviewClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clientShouldReturnReview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;StepVerifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reviewClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAllReviews&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;expectNextMatches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;review&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;review&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAuthor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Sergio&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;review&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;verifyComplete&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@AutoconfigurationStubRunner&lt;/code&gt; will set:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ids:
    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;groupId&lt;/em&gt; of the artifact.&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;artifactId&lt;/em&gt; of the producer.&lt;/li&gt;
      &lt;li&gt;producer version (+ means latest).&lt;/li&gt;
      &lt;li&gt;port on which the generated stub will run.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;stubsMode:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;StubRunnerProperties.StubsMode.CLASSPATH&lt;/code&gt; (default value) - will pick stubs from the classpath.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;StubRunnerProperties.StubsMode.LOCAL&lt;/code&gt; - will pick stubs from a local storage (e.g. &lt;em&gt;.m2&lt;/em&gt;).&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;StubRunnerProperties.StubsMode.REMOTE&lt;/code&gt; - will pick stubs from a remote location.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As we mentioned, the consumer uses the stub generated by the producer, so if the producer changes the API the contract will break.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Making sure that our APIs work as advertised is very important in the microservices era, since many teams might work in different part of our system and we need to align producers and consumers to avoid misunderstandings at a late stage of the development process. Using Wiremock in isolation is not enough, because producers may change their specification and we might not be aware of these changes, therefore it is very important to test the contract defined between producers and consumers at every stage.&lt;/p&gt;

&lt;p class=&quot;text-center&quot;&gt;
&lt;a class=&quot;m-1 btn btn-outline-primary btn-2 &quot; href=&quot;https://github.com/smartinrub/testing-spring-microservices&quot;&gt;
  Source Code
&lt;/a&gt;
&lt;/p&gt;</content><author><name>Sergio Martin Rubio</name><email>me@sergiomartinrubio.com</email></author><category term="Java" /><category term="Spring" /><category term="Testing" /><category term="Microservices" /><summary type="html"></summary></entry><entry><title type="html">Micronaut, a New Contender for the Microservices Era</title><link href="http://localhost:4000/articles/micronaut-a-new-contender-for-the-microservices-era" rel="alternate" type="text/html" title="Micronaut, a New Contender for the Microservices Era" /><published>2019-04-29T00:00:00+01:00</published><updated>2019-04-29T00:00:00+01:00</updated><id>http://localhost:4000/articles/micronaut-a-new-contender-for-the-microservices-era</id><content type="html" xml:base="http://localhost:4000/articles/micronaut-a-new-contender-for-the-microservices-era">&lt;div class=&quot;list-group my-3&quot;&gt;

  
    &lt;a class=&quot;list-group-item list-group-item-action active disabled text-white&quot;&gt;Table of Contents&lt;/a&gt;
  

  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#getting-started&quot;&gt;
Getting Started&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#when-should-i-use-micronaut&quot;&gt;
When should I use Micronaut?&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#caveats&quot;&gt;
Caveats&lt;/a&gt;
    
  

&lt;/div&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://micronaut.io/&quot;&gt;Micronaut&lt;/a&gt;&lt;/strong&gt; is a web framework similar to &lt;strong&gt;Spring Boot&lt;/strong&gt;, which started at &lt;a href=&quot;https://objectcomputing.com/&quot;&gt;OCI&lt;/a&gt; and was initially developed by &lt;em&gt;Groovy&lt;/em&gt; and &lt;em&gt;Rails&lt;/em&gt; developers from &lt;strong&gt;Pivotal&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Micranaut is really a competitor for Spring Boot, and if you are comfortable with Spring Boot, Micronaut provides a Spring-like way of creating web applications. It uses JAX-RS annotations and specific Micronaut annotations similar to the Spring Boot ones (sometimes the only difference is the package name (&lt;code class=&quot;highlighter-rouge&quot;&gt;io.micronaut&lt;/code&gt;)).&lt;/p&gt;

&lt;h3 id=&quot;getting-started&quot;&gt;Getting Started&lt;/h3&gt;

&lt;p&gt;A &lt;strong&gt;CLI tool&lt;/strong&gt; similar to the one provided by Spring is avaialable to create your Micronaut applications. The simplest way to start using the CLI tool is to install it through SDKMAM.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; https://get.sdkman.io | bash
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/.sdkman/bin/sdkman-init.sh&quot;&lt;/span&gt;
sdk &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;micronaut
mn &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now you can create your first Micronaut project.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mn create-app com.sergiomartinrubio.micronaut-example &lt;span class=&quot;nt&quot;&gt;--build&lt;/span&gt; maven
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By default, it uses &lt;strong&gt;Gradle&lt;/strong&gt; build system and Java as the main language, however, you can tweat these setting by using these two flags: &lt;code class=&quot;highlighter-rouge&quot;&gt;--build&lt;/code&gt; [gradle, manven] and &lt;code class=&quot;highlighter-rouge&quot;&gt;--lang&lt;/code&gt; [java, groovy, kotlin]. You can also add features to the project, like &lt;strong&gt;GraalVM&lt;/strong&gt; support, &lt;a href=&quot;http://sergiomartinrubio.com/articles/troubleshooting-tools-for-microservices-architecture&quot;&gt;&lt;strong&gt;Zipkin&lt;/strong&gt;&lt;/a&gt; for tracing, type of rendering…&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;GraalVM&lt;/strong&gt;: it is an ecosystem which supports many languages and allows you to run your applications like a native one, so in the case of Java, it will translate your bytecode into machine code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When &lt;code class=&quot;highlighter-rouge&quot;&gt;nm&lt;/code&gt; command is run, it esentially creates a base folder with the build system file chosen (if you choose Gradle, it also provides a Gradle wrapper, so it downloads it for you), a &lt;strong&gt;Dockerfile&lt;/strong&gt; ready to run, and a logback file for log configuration.&lt;/p&gt;

&lt;h3 id=&quot;features&quot;&gt;Features&lt;/h3&gt;

&lt;p&gt;You can crate controllers by using &lt;code class=&quot;highlighter-rouge&quot;&gt;@Controller&lt;/code&gt; annotation and define your endpoints with http method annotations like &lt;code class=&quot;highlighter-rouge&quot;&gt;@Get&lt;/code&gt;. When you run the application, you can hit the endpoint at http://localhost:8080, so it will feel as a &lt;strong&gt;Spring Boot&lt;/strong&gt; application.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Controller&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UpperCaseController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/touppercase/{input}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@PathVariable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;input&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tests are also created in a similar way as the &lt;strong&gt;Spring Boot&lt;/strong&gt; way. Instead of 
&lt;code class=&quot;highlighter-rouge&quot;&gt;@SpringBootTest&lt;/code&gt; annotation, it uses &lt;code class=&quot;highlighter-rouge&quot;&gt;@MicronautTest&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;RxHttpClient&lt;/code&gt; annotated with &lt;code class=&quot;highlighter-rouge&quot;&gt;@Client&lt;/code&gt; instead of autowiring &lt;code class=&quot;highlighter-rouge&quot;&gt;TestRestTemplate&lt;/code&gt;, to make HTTP requests to your controller.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@MicronautTest&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UpperCaseControllerTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Inject&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;RxHttpClient&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toUpperCase_givenStringPathParam_whenParamIsValid_thenReturnsStringInUpperCase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;HttpRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/touppercase/test&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toBlocking&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;retrieve&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;assertNotNull&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;TEST&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p class=&quot;text-center&quot;&gt;
&lt;a class=&quot;m-1 btn btn-outline-primary btn-2 &quot; href=&quot;https://github.com/smartinrub/micronaut-example&quot;&gt;
  Source Code
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Micronaut provides a compile-time &lt;em&gt;AOP API&lt;/em&gt; that does not use reflection. For those who don’t know what reflection is, it is basically a way to the program to introspect itself, so it asks itself if a class has specific methods, annotations, parameters… and Spring uses intensively reflection to search for controllers, endpoints, beans… so there is a performance penalty that you pay, and most of this work is done during startup. Therefore, Micronaut has a great advantage in the serverless model, where startup times are very important.&lt;/p&gt;

&lt;p&gt;Micronaut relies on annotations, it uses these annotations in a different way as Spring. During compile-time, it scans all the different annotations and add extra code to hook everything up. This means that once the Java jar is compiled, annotations are not needed anymore, so there is no need to do any reflection, because the code is already baked into the jar. Bear in mind that Micranaut doesn’t modify the original classes, instead it creates extra classes, so if you need to debug your code, it will stop on the line you are expecting to stop.&lt;/p&gt;

&lt;figure class=&quot;figure w-100&quot;&gt;
  &lt;img src=&quot;https://lh3.googleusercontent.com/nGgRatrpzZdn-_ZvPwut4KXsFHZqmpOy-EGr7QuDAPuafOhqCQKE4Xon8XxvXV25g9F_BthT9XC6CNP3raJoSk6O10WoHLivEhiWnFRQax5ImF81t4RABMBsjxm6p45wBq8Ml_M4jQ=w400&quot; class=&quot;figure-img img-fluid rounded&quot; alt=&quot;Micronaut Additional Classes&quot; /&gt;
  
    &lt;figcaption class=&quot;figure-caption text-center&quot;&gt;Micronaut Additional Classes&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Micranaut tries to make it compatible with &lt;strong&gt;GraalVM&lt;/strong&gt; as much as possible, and even has a feature to generate a project with Graal support. This is done by creating a Docker image with GraalVM, &lt;em&gt;JDK&lt;/em&gt; and the Java binaries.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Micronaut only supports Netty&lt;/strong&gt; and &lt;strong&gt;there is no way at the moment to switch to Tomcat&lt;/strong&gt;, so you have to considerer if Spring metrics and threading handling of Tomcat is a must. However, it is compatible with &lt;strong&gt;Micrometer&lt;/strong&gt;, &lt;strong&gt;provides refresh and healthcheck endpoints, cache endpoints…&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Other features:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Bean configuration and lifecycle modifications&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;A number of different formats for your &lt;strong&gt;application properties&lt;/strong&gt; like application.yaml, application.properties or application.groovy.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;AOP&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Environment specific configuration&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;AWS Lambda&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/openfaas/faas&quot;&gt;OpenFaaS&lt;/a&gt;, &lt;a href=&quot;http://sergiomartinrubio.com/articles/serverless-hello-world-with-fn-framework&quot;&gt;ProjectFn&lt;/a&gt; and &lt;a href=&quot;https://github.com/projectriff/riff&quot;&gt;riff&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Cloud Native support&lt;/strong&gt;: &lt;em&gt;Consul&lt;/em&gt;, &lt;em&gt;Eureka&lt;/em&gt;, &lt;em&gt;Kubernetes&lt;/em&gt;, &lt;em&gt;Spring Cloud Config&lt;/em&gt;…&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Tracing&lt;/strong&gt; with &lt;strong&gt;Zipkin&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Ribbon&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Kafka and RabbitMQ.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Support for data access configuration&lt;/strong&gt;: &lt;em&gt;mongoDB&lt;/em&gt;, &lt;em&gt;Hibernate&lt;/em&gt;, &lt;em&gt;Redis&lt;/em&gt;, &lt;em&gt;Cassandra&lt;/em&gt;…&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Authentication&lt;/strong&gt;: LDAP…&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Circuit Breaker&lt;/strong&gt; (Hystrix).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Websockets&lt;/strong&gt;.
…&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mironaut-vs-spring-boot-performance&quot;&gt;Mironaut vs Spring Boot performance&lt;/h3&gt;

&lt;p&gt;Three metrics will be measure to decide which framework performs better. Both, &lt;strong&gt;Spring Boot&lt;/strong&gt; and &lt;strong&gt;Micronaut&lt;/strong&gt; applications contain same features: http web support with only one class where a controller is defined, and a single endpoint, which converts a string to upper case. Spring uses Tomcat as the embedded web server, whereas the Micronaut one uses Netty.&lt;/p&gt;

&lt;h4 id=&quot;startup-time&quot;&gt;Startup Time&lt;/h4&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 8090:8090 spring-boot-example

  &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;   ____          _            __ _ _
 /&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt; / ___&lt;span class=&quot;s1&quot;&gt;'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '&lt;/span&gt;_ | &lt;span class=&quot;s1&quot;&gt;'_| | '&lt;/span&gt;_ &lt;span class=&quot;se&quot;&gt;\/&lt;/span&gt; _&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; | &lt;span class=&quot;se&quot;&gt;\ \ \ \&lt;/span&gt;
 &lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;/  ___&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;| |_&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;| | | | | &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;_| |  &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.1.4.RELEASE)

2019-04-30 11:18:47.729  INFO 1 --- [           main] c.s.s.SpringBootExampleApplication       : Starting SpringBootExampleApplication v0.0.1-SNAPSHOT on 960c5b1f8f80 with PID 1 (/spring-boot-example.jar started by root in /)
2019-04-30 11:18:47.733  INFO 1 --- [           main] c.s.s.SpringBootExampleApplication       : No active profile set, falling back to default profiles: default
2019-04-30 11:18:49.503  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2019-04-30 11:18:49.546  INFO 1 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-04-30 11:18:49.546  INFO 1 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.17]
2019-04-30 11:18:49.634  INFO 1 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-04-30 11:18:49.635  INFO 1 --- [           main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1828 ms
2019-04-30 11:18:49.974  INFO 1 --- [           main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService '&lt;/span&gt;applicationTaskExecutor&lt;span class=&quot;s1&quot;&gt;'
2019-04-30 11:18:50.247  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8090 (http) with context path ''
2019-04-30 11:18:50.252  INFO 1 --- [           main] c.s.s.SpringBootExampleApplication       : Started SpringBootExampleApplication in 3.001 seconds (JVM running for 4.299)
2019-04-30 11:21:49.215  INFO 1 --- [nio-8090-exec-7] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet '&lt;/span&gt;dispatcherServlet&lt;span class=&quot;s1&quot;&gt;'
2019-04-30 11:21:49.216  INFO 1 --- [nio-8090-exec-7] o.s.web.servlet.DispatcherServlet        : Initializing Servlet '&lt;/span&gt;dispatcherServlet&lt;span class=&quot;s1&quot;&gt;'
2019-04-30 11:21:49.247  INFO 1 --- [nio-8090-exec-7] o.s.web.servlet.DispatcherServlet        : Completed initialization in 30 ms

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It takes &lt;strong&gt;~3 seconds&lt;/strong&gt; to start the Spring Boot application.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 8080:8080 micronaut-example  
11:19:08.888 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;main] INFO  io.micronaut.runtime.Micronaut - Startup completed &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;1352ms. Server Running: http://bca092ae4eb6:8080

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In only &lt;strong&gt;~1.3 seconds&lt;/strong&gt; the Micranaut app is up and running.&lt;/p&gt;

&lt;p&gt;Spring Boot startup is more than 50% slower.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Winner&lt;/strong&gt;: &lt;strong&gt;Micronaut&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;initial-memory-consumption&quot;&gt;Initial Memory Consumption&lt;/h4&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker ps

CONTAINER ID        IMAGE                 COMMAND                  CREATED              STATUS              PORTS
                             NAMES
b883c35548e1        spring-boot-example   &lt;span class=&quot;s2&quot;&gt;&quot;/bin/sh -c 'java -X…&quot;&lt;/span&gt;   About a minute ago   Up About a minute   8080/t
&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt;, 0.0.0.0:8090-&amp;gt;8090/tcp   tender_booth
ba1be364bd13        micronaut-example     &lt;span class=&quot;s2&quot;&gt;&quot;/bin/sh -c 'java -X…&quot;&lt;/span&gt;   About a minute ago   Up About a minute   0.0.0.
0:8080-&amp;gt;8080/tcp             crazy_blackwell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker stats

CONTAINER ID        NAME                CPU %               MEM USAGE / LIMIT     MEM %               NET I/O             BLOCK I/O           PIDS
ba1be364bd13        crazy_blackwell     0.11%               47.36MiB / 7.676GiB   0.60%               7.99kB / 168B       34.9MB / 4.1kB      29
b883c35548e1        tender_booth        0.27%               70.78MiB / 7.676GiB   0.90%               5.87kB / 0B         20.4MB / 4.1kB      45

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;where &lt;em&gt;b883c35548e1&lt;/em&gt; is the Spring Boot app and &lt;em&gt;ba1be364bd13&lt;/em&gt; is Micronaut.&lt;/p&gt;

&lt;p&gt;Micronaut consumes around 30% less memory than Spring Boot.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Winner: Micronaut&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;heavy-load-memory-consumption&quot;&gt;Heavy Load Memory Consumption&lt;/h4&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CONTAINER ID        NAME                CPU %               MEM USAGE / LIMIT     MEM %               NET I/O             BLOCK I/O           PIDS
ba1be364bd13        crazy_blackwell     23.80%              339.1MiB / 7.676GiB   4.31%               3.24MB / 2.45MB     38MB / 4.1kB        52
b883c35548e1        tender_booth        22.52%              123.4MiB / 7.676GiB   1.57%               3.23MB / 2.35MB     21.9MB / 4.1kB      170

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Surprisingly, under heavy load Micronaut performs much worese in terms of memory consumption. Micronaut uses 65% more memory than Spring under the same conditions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Winner: Spring Boot&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;response-time&quot;&gt;Response Time&lt;/h4&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Micronaut Request	9994	2	2	4	5	9	0	50	0.0	97.26710008953945	12.823299328210767	12.443349718486004
Spring Boot Request	9994	2	2	3	4	8	0	63	0.0	97.27467393420285	11.114391455372786	12.444318638066965
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Both frameworks perform in the same way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Winner: tie&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;

&lt;p&gt;Micronaut startup time and initial memory consumption are much better than Spring Boot ones, however, the high memory consumption of Micronaut during heavy load is quite concerning and it seems memory management is not that great.&lt;/p&gt;

&lt;h3 id=&quot;when-should-i-use-micronaut&quot;&gt;When should I use Micronaut?&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Micronaut&lt;/strong&gt; team advertise it as a low memory consumption framework with a quick startup time, so it is very suitable for the &lt;em&gt;serverless&lt;/em&gt; world.&lt;/p&gt;

&lt;p&gt;This framework is also a good choice if you are moving your application to the cloud or you are creating a project from scratch.&lt;/p&gt;

&lt;h3 id=&quot;caveats&quot;&gt;Caveats&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;It is still fairly new, and the community is quite small compare to the Spring one, though big enterprise companies like ThoughtWorks has already included it on their tech radar.&lt;/li&gt;
  &lt;li&gt;Netty is the only client web server available.&lt;/li&gt;
  &lt;li&gt;For new developers used to Spring, it might be a little big challenging, because, under the hood it works in a completely different way.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Sergio Martin Rubio</name><email>me@sergiomartinrubio.com</email></author><category term="Java" /><category term="Web Applications" /><summary type="html"></summary></entry><entry><title type="html">Spring Bean Lifecycle Fundamentals</title><link href="http://localhost:4000/articles/spring-bean-lifecycle-fundamentals" rel="alternate" type="text/html" title="Spring Bean Lifecycle Fundamentals" /><published>2019-04-15T00:00:00+01:00</published><updated>2019-04-15T00:00:00+01:00</updated><id>http://localhost:4000/articles/spring-bean-lifecycle-fundamentals</id><content type="html" xml:base="http://localhost:4000/articles/spring-bean-lifecycle-fundamentals">&lt;div class=&quot;list-group my-3&quot;&gt;

  
    &lt;a class=&quot;list-group-item list-group-item-action active disabled text-white&quot;&gt;Table of Contents&lt;/a&gt;
  

  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#main-concepts&quot;&gt;
Main Concepts&lt;/a&gt;
    
  
    
      &lt;a class=&quot;list-group-item list-group-item-action&quot; href=&quot;#lifecycle&quot;&gt;
Lifecycle&lt;/a&gt;
    
  

&lt;/div&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Bean&lt;/strong&gt; is one of the angular stones in the &lt;strong&gt;Spring Framework&lt;/strong&gt;, and it is very important to know how it works. However, the concept of &lt;em&gt;bean&lt;/em&gt; it is not very clear and the &lt;a href=&quot;https://docs.spring.io/spring/docs/current/spring-framework-reference/core.html#beans-introduction&quot;&gt;Bean definition given by the official Spring documentation&lt;/a&gt; is not easy to understand.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In Spring, the &lt;strong&gt;objects&lt;/strong&gt; that form the backbone of your application and that are &lt;strong&gt;managed by the Spring IoC container&lt;/strong&gt; are called beans. &lt;strong&gt;A bean is an object that is instantiated, assembled, and otherwise managed by a Spring IoC container&lt;/strong&gt;. Otherwise, &lt;strong&gt;a bean is simply one of many objects in your application&lt;/strong&gt;. Beans, and the dependencies among them, are reflected in the configuration metadata used by a container.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;mark class=&quot;px-2&quot;&gt;Roughly, we can say that a Bean is simply an object with a concrete life cycle managed by the Spring Framework.&lt;/mark&gt;&lt;/p&gt;

&lt;p&gt;This definition might seem a little bit abstract, but do not worry we will go into more in depth shortly.&lt;/p&gt;

&lt;p&gt;Moreover, I would like to answer some &lt;a href=&quot;https://howtodoinjava.com/interview-questions/top-spring-interview-questions-with-answers/#ioc_in_spring&quot;&gt;frequest Spring interview questions&lt;/a&gt; like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Explain IoC in Spring Framework?&lt;/li&gt;
  &lt;li&gt;Explain Dependency Injection in Spring?&lt;/li&gt;
  &lt;li&gt;What are different Bean scopes in Spring?&lt;/li&gt;
  &lt;li&gt;Can you explain Bean life cycle in Spring Bean Factory Container?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;main-concepts&quot;&gt;Main Concepts&lt;/h3&gt;

&lt;h4 id=&quot;spring-ioc&quot;&gt;Spring IoC&lt;/h4&gt;

&lt;p&gt;According to the Spring definition of &lt;strong&gt;Bean&lt;/strong&gt;, this special object is managed by the Spring IoC container, which is represented in your application by &lt;code class=&quot;highlighter-rouge&quot;&gt;org.springframework.context.ApplicationContext&lt;/code&gt;, and this container is responsible for the initiliazation, configuration and assembly. But we will not have to worry about enriching (add metadata) your bean, since it is done by the framework by using XML config files, annotations or Java code.&lt;/p&gt;

&lt;p&gt;A Spring IoC container can manage one or more beans and once all the beans are loaded in this container, you can retrieve instances of your beans through the &lt;code class=&quot;highlighter-rouge&quot;&gt;ApplicationContext&lt;/code&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;getBean()&lt;/code&gt;).&lt;/p&gt;

&lt;h4 id=&quot;dependency-injection&quot;&gt;Dependency Injection&lt;/h4&gt;

&lt;p&gt;The definition of DI given by Spring is very straightforward, and simply says that DI is the process of defining objects with their dependencies, that are set on the object instance through a constructor or setters.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DI&lt;/strong&gt; is used by the &lt;strong&gt;IoC container&lt;/strong&gt;, which injects the dependencies when the bean is created. Therefore, it is not the bean, it is the container the one reposible for injecting the dependencie. The Bean does not need to know anything about the instantiation and location of the dependencies, and that is why it is called Inversion of Control.&lt;/p&gt;

&lt;h4 id=&quot;bean-scopes&quot;&gt;Bean Scopes&lt;/h4&gt;

&lt;p&gt;All the beans are not the same, and &lt;em&gt;Spring&lt;/em&gt; provides a few different recipes to modify the scope. In total there are six scopes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;singleton&lt;/em&gt;&lt;/strong&gt; (default): creates one instance for each &lt;strong&gt;IoC container&lt;/strong&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;ApplicationContext&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;prototype&lt;/em&gt;&lt;/strong&gt;: a new instance is created every time the bean is called.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;request&lt;/em&gt;&lt;/strong&gt;: creates a single instance per HTTP request.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;session&lt;/em&gt;&lt;/strong&gt;: one instance for each web session.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;application&lt;/em&gt;&lt;/strong&gt;: only one instance per &lt;code class=&quot;highlighter-rouge&quot;&gt;ServletContext&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;&lt;strong&gt;websocket&lt;/strong&gt;&lt;/em&gt;: it is tight to the websocket lifecycle.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Do not confuse &lt;em&gt;Bean&lt;/em&gt; with scope singleton with the &lt;a href=&quot;http://sergiomartinrubio.com/articles/creational-patterns-features#singleton-pattern&quot;&gt;Singleton Design Pattern&lt;/a&gt;. The latter creates an instance per &lt;code class=&quot;highlighter-rouge&quot;&gt;ClassLoader&lt;/code&gt;, wherease the singleton Bean creates a bean per Spring container.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;When using singleton Bean which contains beans with different lifecycles, remember that injection only happens once. We can use beans with different scopes by using &lt;code class=&quot;highlighter-rouge&quot;&gt;proxyMode = ScopedProxyMode.TARGET_CLASS&lt;/code&gt; in the &lt;code class=&quot;highlighter-rouge&quot;&gt;@Scope&lt;/code&gt; annotation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;lifecycle&quot;&gt;Lifecycle&lt;/h3&gt;

&lt;h4 id=&quot;spring-bean-creation-lifecycle&quot;&gt;Spring Bean Creation Lifecycle&lt;/h4&gt;

&lt;figure class=&quot;figure w-100&quot;&gt;
  &lt;img src=&quot;https://lh3.googleusercontent.com/nh9SbACTD7OEgewuv7DNNGRDlut2R6KZYVDgK5oouzwYAkchtR9VolnRvVmfbBhqV0SXwC_F0ywT-2cZJanHHs9YtIGZePd2k-vQ05wq_Qw0Jg4t6ony2tOLlv19grC5Z1290qCBDA=w300&quot; class=&quot;figure-img img-fluid rounded&quot; alt=&quot;Spring Bean Creation Lifecycle&quot; /&gt;
  
    &lt;figcaption class=&quot;figure-caption text-center&quot;&gt;Spring Bean Creation Lifecycle&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;ol&gt;
  &lt;li&gt;Instanciate Bean&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Spring IoC container add metadata to the bean&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;If &lt;code class=&quot;highlighter-rouge&quot;&gt;BeanNameAware&lt;/code&gt; is implemented, Spring will set the name pass as parameter in &lt;code class=&quot;highlighter-rouge&quot;&gt;setBeanName()&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;If &lt;code class=&quot;highlighter-rouge&quot;&gt;BeanFactoryAware&lt;/code&gt; is implemented, Spring will call &lt;code class=&quot;highlighter-rouge&quot;&gt;setBeanFactory()&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;If &lt;code class=&quot;highlighter-rouge&quot;&gt;ApplicationContextAware&lt;/code&gt; is implemented, Spring will pass a reference to the &lt;code class=&quot;highlighter-rouge&quot;&gt;ApplicationContext&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;setApplicationContext()&lt;/code&gt; method.&lt;/li&gt;
  &lt;li&gt;If &lt;code class=&quot;highlighter-rouge&quot;&gt;BeanPostProcessor&lt;/code&gt; is implemented, it will run &lt;code class=&quot;highlighter-rouge&quot;&gt;ProcessBeforeInitialization()&lt;/code&gt; method.&lt;/li&gt;
  &lt;li&gt;If &lt;code class=&quot;highlighter-rouge&quot;&gt;@PostConstruct&lt;/code&gt; is used, &lt;code class=&quot;highlighter-rouge&quot;&gt;InitializingBean&lt;/code&gt; is implemented, or &lt;code class=&quot;highlighter-rouge&quot;&gt;init()&lt;/code&gt; is implicitly called, Spring calls &lt;code class=&quot;highlighter-rouge&quot;&gt;afterPropertiesSet()&lt;/code&gt; method.&lt;/li&gt;
  &lt;li&gt;If &lt;code class=&quot;highlighter-rouge&quot;&gt;BeanPostProcessor&lt;/code&gt; is implemented, Spring will run &lt;code class=&quot;highlighter-rouge&quot;&gt;postProcessAfterInitialization()&lt;/code&gt; method.&lt;/li&gt;
  &lt;li&gt;The bean now can be used and remains in the application context until it is destroyed.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;spring-bean-destruction-lifecycle&quot;&gt;Spring Bean Destruction Lifecycle&lt;/h4&gt;

&lt;figure class=&quot;figure w-100&quot;&gt;
  &lt;img src=&quot;https://lh3.googleusercontent.com/_zltXkTlijU1wZpQL5WvH1r82nMEmekAavT3O_nPC1xBVaoxv-hQmcv3fxeiBW7HLArDWfTK5CQqVeXQNiqDeWFVU2chCbhnbL2uggQsjZgiTueQDJRRU2d_WBL4wDuPQcaPxTvHXA=w300&quot; class=&quot;figure-img img-fluid rounded&quot; alt=&quot;Spring Bean Destruction Lifecycle&quot; /&gt;
  
    &lt;figcaption class=&quot;figure-caption text-center&quot;&gt;Spring Bean Destruction Lifecycle&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Spring IoC container is shutdown&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;If &lt;code class=&quot;highlighter-rouge&quot;&gt;@PreDestroy&lt;/code&gt; is used, &lt;code class=&quot;highlighter-rouge&quot;&gt;DisposableBean&lt;/code&gt; is implemented, or &lt;code class=&quot;highlighter-rouge&quot;&gt;destroy()&lt;/code&gt; method is implicitly called, Spring will run &lt;code class=&quot;highlighter-rouge&quot;&gt;destroy()&lt;/code&gt; method.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;lifecycle-callbacks&quot;&gt;Lifecycle Callbacks&lt;/h4&gt;

&lt;p&gt;Spring recommend us to use &lt;code class=&quot;highlighter-rouge&quot;&gt;@PostConstruct&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;@PreDestroy&lt;/code&gt; annotations to perform work during bean initialization and bean destruction.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In case of &lt;strong&gt;XML&lt;/strong&gt; configuration we can use the &lt;em&gt;init-method&lt;/em&gt; or &lt;em&gt;destroy-method&lt;/em&gt; attributes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the following &lt;strong&gt;Bean&lt;/strong&gt; declaration we are combining &lt;strong&gt;Lifecycle&lt;/strong&gt; mechanisms, and they will be called in a particular order.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Component&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExampleBean&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InitializingBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DisposableBean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@PostConstruct&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;callbackInitMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Call init method from Annotation&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@PreDestroy&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;callbackDestroyMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Call destroy method from Annotation&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Not recommended! It couples the code to Spring.&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;afterPropertiesSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Call init method from afterPropertiesSet&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Not recommended! It couples the code to Spring.&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;destroy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Call destroy method from destroy implementation&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When running the application we can see when these methods are called.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2019-04-16 18:07:16.638  INFO 25181 &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;           main] c.s.s.SpringBeanLifecycleApplication     : Starting SpringBeanLifecycleApplication on LONC02WW2Q9JG5L with PID 25181
2019-04-16 18:07:16.640  INFO 25181 &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;           main] c.s.s.SpringBeanLifecycleApplication     : No active profile &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;, falling back to default profiles: default
Call init method from Annotation
Call init method from afterPropertiesSet
2019-04-16 18:07:16.925  INFO 25181 &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;           main] c.s.s.SpringBeanLifecycleApplication     : Started SpringBeanLifecycleApplication &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.453 seconds &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;JVM running &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;0.845&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Call destroy method from Annotation
Call destroy method from destroy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As we showed before, annotations are executed first, and then, overriden methods.&lt;/p&gt;

&lt;p&gt;Spring also provides &lt;strong&gt;startup and shutdown callbacks&lt;/strong&gt; and we can use them b just implementing the &lt;code class=&quot;highlighter-rouge&quot;&gt;Lifecycle&lt;/code&gt; interface. Additionally, we can implement &lt;code class=&quot;highlighter-rouge&quot;&gt;LifecycleProcessor&lt;/code&gt; to &lt;strong&gt;react when the context changes&lt;/strong&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;onRefresh()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;onClose()&lt;/code&gt;). In case we need a &lt;strong&gt;fine-grained control over the startup&lt;/strong&gt; of a bean we can implement &lt;code class=&quot;highlighter-rouge&quot;&gt;SmartLifecycle&lt;/code&gt;, so we can specify when the bean &lt;strong&gt;should&lt;/strong&gt; start and stop. The default value returned by &lt;code class=&quot;highlighter-rouge&quot;&gt;getPhase()&lt;/code&gt; is 2147483647 (&lt;code class=&quot;highlighter-rouge&quot;&gt;Integer.MAX_VALUE&lt;/code&gt;), which means last to start and first to stop. If &lt;code class=&quot;highlighter-rouge&quot;&gt;getPhase()&lt;/code&gt; method is overriden, and returns &lt;code class=&quot;highlighter-rouge&quot;&gt;Integer.MIN_VALUE&lt;/code&gt;, the &lt;strong&gt;Bean&lt;/strong&gt; will be among the first to start and the last to stop.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Component&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExampleBean&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Lifecycle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LifecycleProcessor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SmartLifecycle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Bean is starting&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Bean is stopping&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isRunning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onRefresh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Context is refreshed&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onClose&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Context is closed&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getPhase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MIN_VALUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally, &lt;strong&gt;Spring&lt;/strong&gt; also provides a wide range of &lt;strong&gt;Aware Interfaces&lt;/strong&gt; that let you indicate extra work that needs to be done during the &lt;strong&gt;Bean lifecycle&lt;/strong&gt;. The &lt;strong&gt;most important Aware interfaces&lt;/strong&gt; are: &lt;code class=&quot;highlighter-rouge&quot;&gt;ApplicationContextAware&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;ApplicationEventPublisherAware&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;BeanClassLoaderAware&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;BeanFactoryAware&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;BeanNameAware&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;BootstrapContextAware&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;LoadTimeWeaverAware&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;MessageSourceAware&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;NotificationPublisherAware&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;ResourceLoaderAware&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;ServletConfigAware&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;ServletContextAware&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Further &lt;a href=&quot;https://docs.spring.io/spring/docs/current/spring-framework-reference/core.html#beans&quot;&gt;documentation about Spring Lifecycle&lt;/a&gt; is avaialable at the official site.&lt;/p&gt;</content><author><name>Sergio Martin Rubio</name><email>me@sergiomartinrubio.com</email></author><category term="Java" /><category term="Spring" /><summary type="html"></summary></entry></feed>